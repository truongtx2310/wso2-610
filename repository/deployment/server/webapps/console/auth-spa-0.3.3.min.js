var AsgardeoAuth=function(l){"use strict";function d(l,d,c,Z){return new(c||(c=Promise))((function(i,t){function e(l){try{b(Z.next(l))}catch(l){t(l)}}function n(l){try{b(Z.throw(l))}catch(l){t(l)}}function b(l){var d;l.done?i(l.value):(d=l.value,d instanceof c?d:new c((function(l){l(d)}))).then(e,n)}b((Z=Z.apply(l,d||[])).next())}))}function c(l,d,c,Z){return new(c||(c=Promise))((function(i,t){function e(l){try{b(Z.next(l))}catch(l){t(l)}}function n(l){try{b(Z.throw(l))}catch(l){t(l)}}function b(l){var d;l.done?i(l.value):(d=l.value,d instanceof c?d:new c((function(l){l(d)}))).then(e,n)}b((Z=Z.apply(l,d||[])).next())}))}l.ResponseMode=void 0,function(l){l.formPost="form_post",l.query="query"}(l.ResponseMode||(l.ResponseMode={})),l.Stores=void 0,function(l){l.ConfigData="config_data",l.OIDCProviderMetaData="oidc_provider_meta_data",l.SessionData="session_data",l.TemporaryData="temporary_data"}(l.Stores||(l.Stores={}));const Z="refresh_token_timer",i=["RS256","RS512","RS384","PS256"],t="code",e="session_state",n="sign_out_url",b="sign_out_success",m="state";var a;!function(l){l.Include="include",l.SameOrigin="same-origin",l.Omit="omit"}(a||(a={}));class o{constructor(l,d,c){this.message=c,this.name=d,this.code=l,Object.setPrototypeOf(this,new.target.prototype)}}class G{constructor(){}static filterClaimsFromIDTokenPayload(l){const d=Object.assign({},l);null==d||delete d.iss,null==d||delete d.aud,null==d||delete d.exp,null==d||delete d.iat,null==d||delete d.acr,null==d||delete d.amr,null==d||delete d.azp,null==d||delete d.auth_time,null==d||delete d.nonce,null==d||delete d.c_hash,null==d||delete d.at_hash,null==d||delete d.nbf,null==d||delete d.isk,null==d||delete d.sid;const c={};return Object.entries(d).forEach((([l,d])=>{const Z=l.split("_").map(((l,d)=>0===d?l:[l[0].toUpperCase(),...l.slice(1)].join(""))).join("");c[Z]=d})),c}static getTokenRequestHeaders(){return{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"}}static generateStateParamForRequestCorrelation(l,d){const c=parseInt(l.split("#")[1]);return d?`${d}_request_${c}`:`request_${c}`}static extractPKCEKeyFromStateParam(l){return`pkce_code_verifier#${parseInt(l.split("request_")[1])}`}}G.getTenantDomainFromIdTokenPayload=(l,d="@")=>{const c=l.sub.split(d);return c.length>2?c[c.length-1]:""};class s{constructor(l,d){this._dataLayer=l,this._config=()=>c(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>c(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()})),this._cryptoHelper=d}resolveEndpoints(l){return c(this,void 0,void 0,(function*(){const d={},c=yield this._config();return c.endpoints&&Object.keys(c.endpoints).forEach((l=>{const Z=l.replace(/[A-Z]/g,(l=>`_${l.toLowerCase()}`));d[Z]=(null==c?void 0:c.endpoints)?c.endpoints[l]:""})),Object.assign(Object.assign({},l),d)}))}resolveEndpointsExplicitly(){return c(this,void 0,void 0,(function*(){const l={},d=yield this._config(),c=["authorization_endpoint","end_session_endpoint","jwks_uri","check_session_iframe","revocation_endpoint","token_endpoint","issuer","userinfo_endpoint"];if(!d.endpoints||!Object.keys(null==d?void 0:d.endpoints).every((l=>{const d=l.replace(/[A-Z]/g,(l=>`_${l.toLowerCase()}`));return c.includes(d)})))throw new o("JS-AUTH_HELPER-REE-NF01","No required endpoints.","Required oidc endpoints are not defined");return d.endpoints&&Object.keys(d.endpoints).forEach((c=>{const Z=c.replace(/[A-Z]/g,(l=>`_${l.toLowerCase()}`));l[Z]=(null==d?void 0:d.endpoints)?d.endpoints[c]:""})),Object.assign({},l)}))}resolveEndpointsByBaseURL(){return c(this,void 0,void 0,(function*(){const l={},d=yield this._config(),c=d.baseUrl;if(!c)throw new o("JS-AUTH_HELPER_REBO-NF01","Base URL not defined.","Base URL is not defined in AuthClient config.");d.endpoints&&Object.keys(d.endpoints).forEach((c=>{const Z=c.replace(/[A-Z]/g,(l=>`_${l.toLowerCase()}`));l[Z]=(null==d?void 0:d.endpoints)?d.endpoints[c]:""}));const Z={authorization_endpoint:`${c}/oauth2/authorize`,end_session_endpoint:`${c}/oidc/logout`,issuer:`${c}/oauth2/token`,jwks_uri:`${c}/oauth2/jwks`,check_session_iframe:`${c}/oidc/checksession`,revocation_endpoint:`${c}/oauth2/revoke`,token_endpoint:`${c}/oauth2/token`,userinfo_endpoint:`${c}/oauth2/userinfo`};return Object.assign(Object.assign({},Z),l)}))}validateIdToken(l){return c(this,void 0,void 0,(function*(){const d=(yield this._dataLayer.getOIDCProviderMetaData()).jwks_uri,c=yield this._config();if(!d||0===d.trim().length)throw new o("JS_AUTH_HELPER-VIT-NF01","JWKS endpoint not found.","No JWKS endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the JWKS endpoint passed to the SDK is empty.");let Z;try{Z=yield fetch(d,{credentials:c.sendCookiesInRequests?a.Include:a.SameOrigin})}catch(d){throw new o("JS-AUTH_HELPER-VIT-NE02","Request to jwks endpoint failed.",null!=d?d:"The request sent to get the jwks from the server failed.")}if(200!==Z.status||!Z.ok)throw new o("JS-AUTH_HELPER-VIT-HE03",`Invalid response status received for jwks request (${Z.statusText}).`,yield Z.json());const i=(yield this._oidcProviderMetaData()).issuer,{keys:t}=yield Z.json(),e=yield this._cryptoHelper.getJWKForTheIdToken(l.split(".")[0],t);return this._cryptoHelper.isValidIdToken(l,e,(yield this._config()).clientID,null!=i?i:"",this._cryptoHelper.decodeIDToken(l).sub,(yield this._config()).clockTolerance)}))}getAuthenticatedUserInfo(l){var d,c,Z,i;const t=this._cryptoHelper.decodeIDToken(l),e=G.getTenantDomainFromIdTokenPayload(t),n=null!==(d=null==t?void 0:t.username)&&void 0!==d?d:"",b=null!==(c=t.given_name)&&void 0!==c?c:"",m=null!==(Z=t.family_name)&&void 0!==Z?Z:"",a=b&&m?`${b} ${m}`:b||m||"",o=null!==(i=t.preferred_username)&&void 0!==i?i:a;return Object.assign({displayName:o,tenantDomain:e,username:n},G.filterClaimsFromIDTokenPayload(t))}replaceCustomGrantTemplateTags(l,d){var Z;return c(this,void 0,void 0,(function*(){let c="openid";const i=yield this._config(),t=yield this._dataLayer.getSessionData(d);return i.scope&&i.scope.length>0&&(i.scope.includes("openid")||i.scope.push("openid"),c=i.scope.join(" ")),l.replace("{{token}}",t.access_token).replace("{{username}}",this.getAuthenticatedUserInfo(t.id_token).username).replace("{{scope}}",c).replace("{{clientID}}",i.clientID).replace("{{clientSecret}}",null!==(Z=i.clientSecret)&&void 0!==Z?Z:"")}))}clearUserSessionData(l){return c(this,void 0,void 0,(function*(){yield this._dataLayer.removeTemporaryData(l),yield this._dataLayer.removeSessionData(l)}))}handleTokenResponse(l,d){return c(this,void 0,void 0,(function*(){if(200!==l.status||!l.ok)throw new o("JS-AUTH_HELPER-HTR-NE01",`Invalid response status received for token request (${l.statusText}).`,yield l.json());const Z=yield l.json();if(Z.created_at=(new Date).getTime(),(yield this._config()).validateIDToken)return this.validateIdToken(Z.id_token).then((()=>c(this,void 0,void 0,(function*(){yield this._dataLayer.setSessionData(Z,d);const l={accessToken:Z.access_token,createdAt:Z.created_at,expiresIn:Z.expires_in,idToken:Z.id_token,refreshToken:Z.refresh_token,scope:Z.scope,tokenType:Z.token_type};return Promise.resolve(l)}))));{const l={accessToken:Z.access_token,createdAt:Z.created_at,expiresIn:Z.expires_in,idToken:Z.id_token,refreshToken:Z.refresh_token,scope:Z.scope,tokenType:Z.token_type};return yield this._dataLayer.setSessionData(Z,d),Promise.resolve(l)}}))}generatePKCEKey(l){var d;return c(this,void 0,void 0,(function*(){const c=yield this._dataLayer.getTemporaryData(l),Z=[];Object.keys(c).forEach((l=>{l.startsWith("pkce_code_verifier")&&Z.push(l)}));const i=Z.sort().pop();return`pkce_code_verifier#${parseInt(null!==(d=null==i?void 0:i.split("#")[1])&&void 0!==d?d:"-1")+1}`}))}}class u{constructor(l){this._cryptoUtils=l}getCodeVerifier(){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.generateRandomBytes(32))}getCodeChallenge(l){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.hashSha256(l))}getJWKForTheIdToken(l,d){const c=JSON.parse(this._cryptoUtils.base64URLDecode(l));for(const Z of d)if(c.kid===Z.kid)return Z;throw new o("JS-CRYPTO_UTIL-GJFTIT-IV01","kid not found.","Failed to find the 'kid' specified in the id_token. 'kid' found in the header : "+c.kid+", Expected values: "+d.map((l=>l.kid)).join(", "))}isValidIdToken(l,d,c,Z,t,e){return this._cryptoUtils.verifyJwt(l,d,i,c,Z,t,e).then((l=>l?Promise.resolve(!0):Promise.reject(new o("JS-CRYPTO_HELPER-IVIT-IV01","Invalid ID token.","ID token validation returned false"))))}decodeIDToken(l){try{const d=this._cryptoUtils.base64URLDecode(l.split(".")[1]);return JSON.parse(d)}catch(l){throw new o("JS-CRYPTO_UTIL-DIT-IV01","Decoding ID token failed.",l)}}}class X{constructor(l,d){this._cryptoUtils=d,this._cryptoHelper=new u(d),this._authenticationHelper=new s(l,this._cryptoHelper),this._dataLayer=l,this._config=()=>c(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>c(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()}))}getAuthorizationURL(l,d){var Z,i,t;return c(this,void 0,void 0,(function*(){const c=yield this._dataLayer.getOIDCProviderMetaDataParameter("authorization_endpoint"),e=yield this._config();if(!c||0===c.trim().length)throw new o("JS-AUTH_CORE-GAU-NF01","No authorization endpoint found.","No authorization endpoint was found in the OIDC provider meta data from the well-known endpoint or the authorization endpoint passed to the SDK is empty.");const n=new URL(c);n.searchParams.append("response_type","code"),n.searchParams.append("client_id",e.clientID);let b="openid";e.scope&&e.scope.length>0&&(e.scope.includes("openid")||e.scope.push("openid"),b=e.scope.join(" ")),n.searchParams.append("scope",b),n.searchParams.append("redirect_uri",e.signInRedirectURL),e.responseMode&&n.searchParams.append("response_mode",e.responseMode);const m=yield this._authenticationHelper.generatePKCEKey(d);if(e.enablePKCE){const l=null===(Z=this._cryptoHelper)||void 0===Z?void 0:Z.getCodeVerifier(),c=null===(i=this._cryptoHelper)||void 0===i?void 0:i.getCodeChallenge(l);yield this._dataLayer.setTemporaryDataParameter(m,l,d),n.searchParams.append("code_challenge_method","S256"),n.searchParams.append("code_challenge",c)}e.prompt&&n.searchParams.append("prompt",e.prompt);const a=l;if(a)for(const[l,d]of Object.entries(a))""!=l&&""!=d&&"state"!==l&&n.searchParams.append(l,d.toString());return n.searchParams.append("state",G.generateStateParamForRequestCorrelation(m,a?null===(t=a.state)||void 0===t?void 0:t.toString():"")),n.toString()}))}requestAccessToken(l,d,Z,i){return c(this,void 0,void 0,(function*(){const c=(yield this._oidcProviderMetaData()).token_endpoint,t=yield this._config();if(!c||0===c.trim().length)throw new o("JS-AUTH_CORE-RAT1-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");d&&(yield this._dataLayer.setSessionDataParameter("session_state",d,i));const e=[];e.push(`client_id=${t.clientID}`),t.clientSecret&&t.clientSecret.trim().length>0&&e.push(`client_secret=${t.clientSecret}`);const n=l;let b;e.push(`code=${n}`),e.push("grant_type=authorization_code"),e.push(`redirect_uri=${t.signInRedirectURL}`),t.enablePKCE&&(e.push(`code_verifier=${yield this._dataLayer.getTemporaryDataParameter(G.extractPKCEKeyFromStateParam(Z),i)}`),yield this._dataLayer.removeTemporaryDataParameter(G.extractPKCEKeyFromStateParam(Z),i));try{b=yield fetch(c,{body:e.join("&"),credentials:t.sendCookiesInRequests?a.Include:a.SameOrigin,headers:new Headers(G.getTokenRequestHeaders()),method:"POST"})}catch(c){throw new o("JS-AUTH_CORE-RAT1-NE02","Requesting access token failed",null!=c?c:"The request to get the access token from the server failed.")}if(!b.ok)throw new o("JS-AUTH_CORE-RAT1-HE03",`Requesting access token failed with ${b.statusText}`,yield b.json());return yield this._authenticationHelper.handleTokenResponse(b,i)}))}refreshAccessToken(l){return c(this,void 0,void 0,(function*(){const d=(yield this._oidcProviderMetaData()).token_endpoint,c=yield this._config(),Z=yield this._dataLayer.getSessionData(l);if(!Z.refresh_token)throw new o("JS-AUTH_CORE-RAT2-NF01","No refresh token found.","There was no refresh token found. Asgardeo doesn't return a refresh token if the refresh token grant is not enabled.");if(!d||0===d.trim().length)throw new o("JS-AUTH_CORE-RAT2-NF02","No refresh token endpoint found.","No refresh token endpoint was in the OIDC provider meta data returned by the well-known endpoint or the refresh token endpoint passed to the SDK is empty.");const i=[];let t;i.push(`client_id=${c.clientID}`),i.push(`refresh_token=${Z.refresh_token}`),i.push("grant_type=refresh_token"),c.clientSecret&&c.clientSecret.trim().length>0&&i.push(`client_secret=${c.clientSecret}`);try{t=yield fetch(d,{body:i.join("&"),credentials:c.sendCookiesInRequests?a.Include:a.SameOrigin,headers:new Headers(G.getTokenRequestHeaders()),method:"POST"})}catch(d){throw new o("JS-AUTH_CORE-RAT2-NR03","Refresh access token request failed.",null!=d?d:"The request to refresh the access token failed.")}if(!t.ok)throw new o("JS-AUTH_CORE-RAT2-HE04",`Refreshing access token failed with ${t.statusText}`,yield t.json());return this._authenticationHelper.handleTokenResponse(t,l)}))}revokeAccessToken(l){return c(this,void 0,void 0,(function*(){const d=(yield this._oidcProviderMetaData()).revocation_endpoint,c=yield this._config();if(!d||0===d.trim().length)throw new o("JS-AUTH_CORE-RAT3-NF01","No revoke access token endpoint found.","No revoke access token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the revoke access token endpoint passed to the SDK is empty.");const Z=[];let i;Z.push(`client_id=${c.clientID}`),Z.push(`token=${(yield this._dataLayer.getSessionData(l)).access_token}`),Z.push("token_type_hint=access_token");try{i=yield fetch(d,{body:Z.join("&"),credentials:c.sendCookiesInRequests?a.Include:a.SameOrigin,headers:new Headers(G.getTokenRequestHeaders()),method:"POST"})}catch(d){throw new o("JS-AUTH_CORE-RAT3-NE02","The request to revoke access token failed.",null!=d?d:"The request sent to revoke the access token failed.")}if(200!==i.status||!i.ok)throw new o("JS-AUTH_CORE-RAT3-HE03",`Invalid response status received for revoke access token request (${i.statusText}).`,yield i.json());return this._authenticationHelper.clearUserSessionData(l),Promise.resolve(i)}))}requestCustomGrant(l,d){return c(this,void 0,void 0,(function*(){const Z=yield this._oidcProviderMetaData(),i=yield this._config();let t;if(t=l.tokenEndpoint&&0!==l.tokenEndpoint.trim().length?l.tokenEndpoint:Z.token_endpoint,!t||0===t.trim().length)throw new o("JS-AUTH_CORE-RCG-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");const e=yield Promise.all(Object.entries(l.data).map((([l,Z])=>c(this,void 0,void 0,(function*(){const c=yield this._authenticationHelper.replaceCustomGrantTemplateTags(Z,d);return`${l}=${c}`})))));let n=Object.assign({},G.getTokenRequestHeaders());l.attachToken&&(n=Object.assign(Object.assign({},n),{Authorization:`Bearer ${(yield this._dataLayer.getSessionData(d)).access_token}`}));const b={body:e.join("&"),credentials:i.sendCookiesInRequests?a.Include:a.SameOrigin,headers:new Headers(n),method:"POST"};let m;try{m=yield fetch(t,b)}catch(l){throw new o("JS-AUTH_CORE-RCG-NE02","The custom grant request failed.",null!=l?l:"The request sent to get the custom grant failed.")}if(200!==m.status||!m.ok)throw new o("JS-AUTH_CORE-RCG-HE03",`Invalid response status received for the custom grant request. (${m.statusText})`,yield m.json());return l.returnsSession?this._authenticationHelper.handleTokenResponse(m,d):Promise.resolve(yield m.json())}))}getBasicUserInfo(l){return c(this,void 0,void 0,(function*(){const d=yield this._dataLayer.getSessionData(l),c=this._authenticationHelper.getAuthenticatedUserInfo(null==d?void 0:d.id_token);let Z={allowedScopes:d.scope,sessionState:d.session_state};return Object.keys(c).forEach((l=>{void 0!==c[l]&&""!==c[l]&&null!==c[l]||delete c[l]})),Z=Object.assign(Object.assign({},Z),c),Z}))}getDecodedIDToken(l){return c(this,void 0,void 0,(function*(){const d=(yield this._dataLayer.getSessionData(l)).id_token;return this._cryptoHelper.decodeIDToken(d)}))}getIDToken(l){return c(this,void 0,void 0,(function*(){return(yield this._dataLayer.getSessionData(l)).id_token}))}getOIDCProviderMetaData(l){return c(this,void 0,void 0,(function*(){const d=yield this._config();if(!l&&(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated")))return Promise.resolve();const c=d.wellKnownEndpoint;if(c){let l;try{if(l=yield fetch(c),200!==l.status||!l.ok)throw new Error}catch(d){throw new o("JS-AUTH_CORE-GOPMD-HE01","Invalid well-known response","The well known endpoint response has been failed with an error.")}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpoints(yield l.json())),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}if(d.baseUrl){try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsByBaseURL())}catch(d){throw new o("JS-AUTH_CORE-GOPMD-IV02","Resolving endpoints failed.",null!=d?d:"Resolving endpoints by base url failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsExplicitly())}catch(d){throw new o("JS-AUTH_CORE-GOPMD-IV03","Resolving endpoints failed.",null!=d?d:"Resolving endpoints by explicitly failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}))}getOIDCServiceEndpoints(){var l,d,Z,i,t,e,n,b,m,a;return c(this,void 0,void 0,(function*(){const c=yield this._oidcProviderMetaData();return{authorizationEndpoint:null!==(l=c.authorization_endpoint)&&void 0!==l?l:"",checkSessionIframe:null!==(d=c.check_session_iframe)&&void 0!==d?d:"",endSessionEndpoint:null!==(Z=c.end_session_endpoint)&&void 0!==Z?Z:"",introspectionEndpoint:null!==(i=c.introspection_endpoint)&&void 0!==i?i:"",issuer:null!==(t=c.issuer)&&void 0!==t?t:"",jwksUri:null!==(e=c.jwks_uri)&&void 0!==e?e:"",registrationEndpoint:null!==(n=c.registration_endpoint)&&void 0!==n?n:"",revocationEndpoint:null!==(b=c.revocation_endpoint)&&void 0!==b?b:"",tokenEndpoint:null!==(m=c.token_endpoint)&&void 0!==m?m:"",userinfoEndpoint:null!==(a=c.userinfo_endpoint)&&void 0!==a?a:""}}))}getSignOutURL(l){var d,Z,i;return c(this,void 0,void 0,(function*(){const c=null===(d=yield this._oidcProviderMetaData())||void 0===d?void 0:d.end_session_endpoint,t=yield this._config();if(!c||0===c.trim().length)throw new o("JS-AUTH_CORE-GSOU-NF01","Sign-out endpoint not found.","No sign-out endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the sign-out endpoint passed to the SDK is empty.");const e=null===(Z=yield this._dataLayer.getSessionData(l))||void 0===Z?void 0:Z.id_token;if(!e||0===e.trim().length)throw new o("JS-AUTH_CORE-GSOU-NF02","ID token not found.","No ID token could be found. Either the session information is lost or you have not signed in.");const n=null!==(i=null==t?void 0:t.signOutRedirectURL)&&void 0!==i?i:null==t?void 0:t.signInRedirectURL;if(!n||0===n.trim().length)throw new o("JS-AUTH_CORE-GSOU-NF03","No sign-out redirect URL found.","The sign-out redirect URL cannot be found or the URL passed to the SDK is empty. No sign-in redirect URL has been found either. ");return`${c}?id_token_hint=${e}&post_logout_redirect_uri=${n}&state=sign_out_success`}))}signOut(l){return c(this,void 0,void 0,(function*(){const d=yield this.getSignOutURL(l);return this._authenticationHelper.clearUserSessionData(l),d}))}getAccessToken(l){var d;return c(this,void 0,void 0,(function*(){return null===(d=yield this._dataLayer.getSessionData(l))||void 0===d?void 0:d.access_token}))}isAuthenticated(l){return c(this,void 0,void 0,(function*(){return Boolean(yield this.getAccessToken(l))}))}getPKCECode(l,d){return c(this,void 0,void 0,(function*(){return yield this._dataLayer.getTemporaryDataParameter(G.extractPKCEKeyFromStateParam(l),d)}))}setPKCECode(l,d,Z){return c(this,void 0,void 0,(function*(){return yield this._dataLayer.setTemporaryDataParameter(G.extractPKCEKeyFromStateParam(d),l,Z)}))}updateConfig(l){return c(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(l),yield this.getOIDCProviderMetaData(!0)}))}}class h{constructor(l,d){this._id=l,this._store=d}setDataInBulk(l,d){var Z;return c(this,void 0,void 0,(function*(){const c=null!==(Z=yield this._store.getData(l))&&void 0!==Z?Z:null,i=c&&JSON.parse(c),t=Object.assign(Object.assign({},i),d),e=JSON.stringify(t);yield this._store.setData(l,e)}))}setValue(l,d,Z){var i;return c(this,void 0,void 0,(function*(){const c=null!==(i=yield this._store.getData(l))&&void 0!==i?i:null,t=c&&JSON.parse(c),e=Object.assign(Object.assign({},t),{[d]:Z}),n=JSON.stringify(e);yield this._store.setData(l,n)}))}removeValue(l,d){var Z;return c(this,void 0,void 0,(function*(){const c=null!==(Z=yield this._store.getData(l))&&void 0!==Z?Z:null,i=c&&JSON.parse(c),t=Object.assign({},i);delete t[d];const e=JSON.stringify(t);yield this._store.setData(l,e)}))}_resolveKey(l,d){return d?`${l}-${this._id}-${d}`:`${l}-${this._id}`}setConfigData(d){return c(this,void 0,void 0,(function*(){yield this.setDataInBulk(this._resolveKey(l.Stores.ConfigData),d)}))}setOIDCProviderMetaData(d){return c(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(l.Stores.OIDCProviderMetaData),d)}))}setTemporaryData(d,Z){return c(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(l.Stores.TemporaryData,Z),d)}))}setSessionData(d,Z){return c(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(l.Stores.SessionData,Z),d)}))}getConfigData(){var d;return c(this,void 0,void 0,(function*(){return JSON.parse(null!==(d=yield this._store.getData(this._resolveKey(l.Stores.ConfigData)))&&void 0!==d?d:null)}))}getOIDCProviderMetaData(){var d;return c(this,void 0,void 0,(function*(){return JSON.parse(null!==(d=yield this._store.getData(this._resolveKey(l.Stores.OIDCProviderMetaData)))&&void 0!==d?d:null)}))}getTemporaryData(d){var Z;return c(this,void 0,void 0,(function*(){return JSON.parse(null!==(Z=yield this._store.getData(this._resolveKey(l.Stores.TemporaryData,d)))&&void 0!==Z?Z:null)}))}getSessionData(d){var Z;return c(this,void 0,void 0,(function*(){return JSON.parse(null!==(Z=yield this._store.getData(this._resolveKey(l.Stores.SessionData,d)))&&void 0!==Z?Z:null)}))}removeConfigData(){return c(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(l.Stores.ConfigData))}))}removeOIDCProviderMetaData(){return c(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(l.Stores.OIDCProviderMetaData))}))}removeTemporaryData(d){return c(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(l.Stores.TemporaryData,d))}))}removeSessionData(d){return c(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(l.Stores.SessionData,d))}))}getConfigDataParameter(d){return c(this,void 0,void 0,(function*(){const c=yield this._store.getData(this._resolveKey(l.Stores.ConfigData));return c&&JSON.parse(c)[d]}))}getOIDCProviderMetaDataParameter(d){return c(this,void 0,void 0,(function*(){const c=yield this._store.getData(this._resolveKey(l.Stores.OIDCProviderMetaData));return c&&JSON.parse(c)[d]}))}getTemporaryDataParameter(d,Z){return c(this,void 0,void 0,(function*(){const c=yield this._store.getData(this._resolveKey(l.Stores.TemporaryData,Z));return c&&JSON.parse(c)[d]}))}getSessionDataParameter(d,Z){return c(this,void 0,void 0,(function*(){const c=yield this._store.getData(this._resolveKey(l.Stores.SessionData,Z));return c&&JSON.parse(c)[d]}))}setConfigDataParameter(d,Z){return c(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(l.Stores.ConfigData),d,Z)}))}setOIDCProviderMetaDataParameter(d,Z){return c(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(l.Stores.OIDCProviderMetaData),d,Z)}))}setTemporaryDataParameter(d,Z,i){return c(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(l.Stores.TemporaryData,i),d,Z)}))}setSessionDataParameter(d,Z,i){return c(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(l.Stores.SessionData,i),d,Z)}))}removeConfigDataParameter(d){return c(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(l.Stores.ConfigData),d)}))}removeOIDCProviderMetaDataParameter(d){return c(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(l.Stores.OIDCProviderMetaData),d)}))}removeTemporaryDataParameter(d,Z){return c(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(l.Stores.TemporaryData,Z),d)}))}removeSessionDataParameter(d,Z){return c(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(l.Stores.SessionData,Z),d)}))}}const p={clockTolerance:300,enablePKCE:!0,responseMode:l.ResponseMode.query,scope:["openid"],sendCookiesInRequests:!0,validateIDToken:!0};class V{constructor(l,d){V._instanceID?V._instanceID+=1:V._instanceID=0,this._dataLayer=new h(`instance_${V._instanceID}`,l),this._authenticationCore=new X(this._dataLayer,d)}initialize(l){var d,Z,i;return c(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(Object.assign(Object.assign(Object.assign({},p),l),{scope:[...null!==(d=p.scope)&&void 0!==d?d:[],...null!==(i=null===(Z=l.scope)||void 0===Z?void 0:Z.filter((l=>{var d;return!(null===(d=null==p?void 0:p.scope)||void 0===d?void 0:d.includes(l))})))&&void 0!==i?i:[]]}))}))}getDataLayer(){return this._dataLayer}getAuthorizationURL(l,d){return c(this,void 0,void 0,(function*(){const c=Object.assign({},l);return null==c||delete c.forceInit,(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.getAuthorizationURL(c,d):this._authenticationCore.getOIDCProviderMetaData(null==l?void 0:l.forceInit).then((()=>this._authenticationCore.getAuthorizationURL(c,d)))}))}requestAccessToken(l,d,Z,i){return c(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.requestAccessToken(l,d,Z,i):this._authenticationCore.getOIDCProviderMetaData(!1).then((()=>this._authenticationCore.requestAccessToken(l,d,Z,i)))}))}signOut(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.signOut(l)}))}getSignOutURL(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getSignOutURL(l)}))}getOIDCServiceEndpoints(){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getOIDCServiceEndpoints()}))}getDecodedIDToken(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getDecodedIDToken(l)}))}getIDToken(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getIDToken(l)}))}getBasicUserInfo(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getBasicUserInfo(l)}))}revokeAccessToken(l){return this._authenticationCore.revokeAccessToken(l)}refreshAccessToken(l){return this._authenticationCore.refreshAccessToken(l)}getAccessToken(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getAccessToken(l)}))}requestCustomGrant(l,d){return this._authenticationCore.requestCustomGrant(l,d)}isAuthenticated(l){return c(this,void 0,void 0,(function*(){return this._authenticationCore.isAuthenticated(l)}))}getPKCECode(l,d){return c(this,void 0,void 0,(function*(){return this._authenticationCore.getPKCECode(l,d)}))}setPKCECode(l,d,Z){return c(this,void 0,void 0,(function*(){yield this._authenticationCore.setPKCECode(l,d,Z)}))}static isSignOutSuccessful(l){const d=new URL(l),c=d.searchParams.get("state"),Z=Boolean(d.searchParams.get("error"));return!!c&&"sign_out_success"===c&&!Z}static didSignOutFail(l){const d=new URL(l),c=d.searchParams.get("state"),Z=Boolean(d.searchParams.get("error"));return!!c&&"sign_out_success"===c&&Z}updateConfig(l){return c(this,void 0,void 0,(function*(){yield this._authenticationCore.updateConfig(l)}))}}const y="sign-out",W="get_auth_url",I="check_session_signed_in",R="check_session_signed_out",r="set_session_state_from_iframe";var S,Y;l.Storage=void 0,(S=l.Storage||(l.Storage={})).LocalStorage="localStorage",S.SessionStorage="sessionStorage",S.WebWorker="webWorker",S.BrowserMemory="browserMemory",l.Hooks=void 0,(Y=l.Hooks||(l.Hooks={})).SignIn="sign-in",Y.SignOut="sign-out",Y.Initialize="initialize",Y.HttpRequestStart="http-request-start",Y.HttpRequestFinish="http-request-finish",Y.HttpRequestError="http-request-error",Y.HttpRequestSuccess="http-request-success",Y.RevokeAccessToken="revoke-access-token",Y.CustomGrant="custom-grant",Y.SignOutFailed="sign-out-failed";const K="rpIFrame",J="promptNoneIFrame",N="Y2hlY2tTZXNzaW9u",H="sign-in-silently",g="initialized-silent-sign-in",L="promptNoneRequestSent",U="error",C="error_description",v="custom_grant_config",k="state",T="Access token is invalid";class x{constructor(l){this._authenticationClient=l,this._dataLayer=this._authenticationClient.getDataLayer()}refreshAccessTokenAutomatically(){return d(this,void 0,void 0,(function*(){const l=yield this._dataLayer.getSessionData();if(l.refresh_token){const c=parseInt(l.expires_in),i=setTimeout((()=>d(this,void 0,void 0,(function*(){yield this._authenticationClient.refreshAccessToken()}))),1e3*(c<=10?c:c-10));yield this._dataLayer.setTemporaryDataParameter(Z,JSON.stringify(i))}}))}clearRefreshTokenTimeout(){return d(this,void 0,void 0,(function*(){if(yield this._dataLayer.getTemporaryDataParameter(Z)){const l=JSON.parse(yield this._dataLayer.getTemporaryDataParameter(Z));clearTimeout(l)}}))}}class F{constructor(){}static removeAuthorizationCode(){const l=location.href;history.pushState({},document.title,l.replace(/\?code=.*$/,""))}static getPKCE(l){var d;return null!==(d=sessionStorage.getItem(l))&&void 0!==d?d:""}static setPKCE(l,d){sessionStorage.setItem(l,d)}static setSignOutURL(l){sessionStorage.setItem(n,l)}static getSignOutURL(){var l;return null!==(l=sessionStorage.getItem(n))&&void 0!==l?l:""}static removePKCE(l){sessionStorage.removeItem(l)}static canContinueSignIn(l,d){return!(l&&!F.hasErrorInURL()&&!F.hasAuthSearchParamsInURL()&&!d)}static isInitializedSilentSignIn(){return F.isSilentStatePresentInURL()}static wasSignInCalled(){return!(!F.hasErrorInURL()&&!F.hasAuthSearchParamsInURL()||this.isSilentStatePresentInURL())}static wasSilentSignInCalled(){const l=sessionStorage.getItem(g),d=l?JSON.parse(l):null;return Boolean(d)}static isSignOutSuccessful(){if(V.isSignOutSuccessful(window.location.href)){const l=window.location.href.split("?")[0];return history.pushState({},document.title,l),!0}return!1}static didSignOutFail(){if(V.didSignOutFail(window.location.href)){const l=new URL(window.location.href),d=l.searchParams.get(U),c=l.searchParams.get(C),Z=window.location.href.split("?")[0];return history.pushState({},document.title,Z),{description:null!=c?c:"",error:null!=d?d:""}}return!1}static isSilentStatePresentInURL(){var l;const d=new URL(window.location.href).searchParams.get("state");return null!==(l=null==d?void 0:d.includes(H))&&void 0!==l&&l}static hasAuthSearchParamsInURL(l=window.location.search){return/[?&]code=[^&]+/.test(l)}static hasErrorInURL(l=window.location.href){const d=new URL(l);return!!d.searchParams.get(U)&&d.searchParams.get(k)!==b}static canSendPromptNoneRequest(){const l=sessionStorage.getItem(L);return!(l&&JSON.parse(l))}static setPromptNoneRequestSent(l){sessionStorage.setItem(L,JSON.stringify(l))}static waitTillPageRedirect(l){return d(this,void 0,void 0,(function*(){const d=null!=l?l:3e3;yield new Promise((l=>setTimeout(l,1e3*d)))}))}}const z=(()=>{let c,Z,i,t,n,b,m,a,o,G,s;const u=(l,d,e,m,a,o,G)=>{c=l,Z=d,i=e,t=m,n=o,b=a,s=G,t>-1&&X(),b>-1&&(a=setInterval((()=>{V()}),1e3*b))},X=()=>d(void 0,void 0,void 0,(function*(){var l;if(!Z||!c||!n)return;const e="opIFrame";function b(){var l;return d(this,void 0,void 0,(function*(){const d=yield i();if(Boolean(c)&&Boolean(d)){const i=`${c} ${d}`,t=document.getElementById(K),n=(null===(l=null==t?void 0:t.contentDocument)||void 0===l?void 0:l.getElementById(e)).contentWindow;null==n||n.postMessage(i,Z)}}))}const m=document.getElementById(K);(null===(l=null==m?void 0:m.contentDocument)||void 0===l?void 0:l.getElementById(e)).src=Z+"?client_id="+c+"&redirect_uri="+n,yield b(),a=setInterval(b,1e3*t),p()})),h=()=>{clearInterval(a),clearInterval(void 0)},p=()=>{null===window||void 0===window||window.addEventListener("message",(function(l){var c;return d(this,void 0,void 0,(function*(){!Z||(null==Z?void 0:Z.indexOf(l.origin))<0||(null===(c=null==l?void 0:l.data)||void 0===c?void 0:c.type)===r||"unchanged"===l.data||("error"===l.data?window.location.href=yield m():"changed"===l.data&&V())}))}),!1)},V=()=>d(void 0,void 0,void 0,(function*(){var d;const c=document.getElementById(K),Z=null===(d=null==c?void 0:c.contentDocument)||void 0===d?void 0:d.getElementById(J);if(F.canSendPromptNoneRequest()){F.setPromptNoneRequestSent(!0);const d=l=>{var c,Z,i;(null===(c=null==l?void 0:l.data)||void 0===c?void 0:c.type)===r&&(G(null!==(i=null===(Z=null==l?void 0:l.data)||void 0===Z?void 0:Z.data)&&void 0!==i?i:""),null===window||void 0===window||window.removeEventListener("message",d))};o!==l.Storage.BrowserMemory&&o!==l.Storage.WebWorker||null===window||void 0===window||window.addEventListener("message",d);const c=yield s({prompt:"none",state:N});Z.src=c}})),y=c=>d(void 0,void 0,void 0,(function*(){var d,Z;const i=new URL(window.location.href).searchParams.get(k),t=new URL(window.location.href).searchParams.get(e),n=window.parent.parent;if(null!==i&&(i.includes(N)||i.includes(H))){const e=new URL(window.location.href).searchParams.get("code");if(null!==e&&0!==e.length){if(i.includes(H)){const l={data:{code:e,sessionState:null!=t?t:"",state:i},type:I};return sessionStorage.setItem(g,"false"),n.postMessage(l,n.origin),F.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield F.waitTillPageRedirect(),!0}const b=new URL(window.location.href).searchParams.get("session_state");if(o===l.Storage.LocalStorage||o===l.Storage.SessionStorage)c&&(yield c(b));else{const l={data:null!=b?b:"",type:r};null===(Z=null===(d=null===window||void 0===window?void 0:window.parent)||void 0===d?void 0:d.parent)||void 0===Z||Z.postMessage(l)}return F.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield F.waitTillPageRedirect(),!0}if(i.includes(H)){const l={type:R};return window.parent.parent.postMessage(l,n.origin),F.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield F.waitTillPageRedirect(),!0}return F.setPromptNoneRequestSent(!1),n.location.href=yield m(),window.location.href="about:blank",yield F.waitTillPageRedirect(),!0}return!1}));return(l,c,Z)=>d(void 0,void 0,void 0,(function*(){var d;let i=document.createElement("iframe");i.setAttribute("id",K),i.style.display="none";let t=!1;for(i.onload=()=>{var l,d,c,Z;i=document.getElementById(K);const e=null==i?void 0:i.contentDocument,n=null==e?void 0:e.createElement("iframe");n&&(n.setAttribute("id","opIFrame"),n.style.display="none");const b=null==e?void 0:e.createElement("iframe");b&&(b.setAttribute("id",J),b.style.display="none"),n&&(null===(d=null===(l=null==i?void 0:i.contentDocument)||void 0===l?void 0:l.body)||void 0===d||d.appendChild(n)),b&&(null===(Z=null===(c=null==i?void 0:i.contentDocument)||void 0===c?void 0:c.body)||void 0===Z||Z.appendChild(b)),t=!0},null===(d=null===document||void 0===document?void 0:document.body)||void 0===d||d.appendChild(i),m=l,o=c,G=Z;!1===t;)yield new Promise((l=>setTimeout(l,1)));return{initialize:u,receivePromptNoneResponse:y,reset:h}}))})();var B="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var f={exports:{}},P=function(l,d){return function(){for(var c=new Array(arguments.length),Z=0;Z<c.length;Z++)c[Z]=arguments[Z];return l.apply(d,c)}},w=P,j=Object.prototype.toString;function Q(l){return Array.isArray(l)}function M(l){return void 0===l}function E(l){return"[object ArrayBuffer]"===j.call(l)}function D(l){return null!==l&&"object"==typeof l}function O(l){if("[object Object]"!==j.call(l))return!1;var d=Object.getPrototypeOf(l);return null===d||d===Object.prototype}function A(l){return"[object Function]"===j.call(l)}function _(l,d){if(null!=l)if("object"!=typeof l&&(l=[l]),Q(l))for(var c=0,Z=l.length;c<Z;c++)d.call(null,l[c],c,l);else for(var i in l)Object.prototype.hasOwnProperty.call(l,i)&&d.call(null,l[i],i,l)}var q={isArray:Q,isArrayBuffer:E,isBuffer:function(l){return null!==l&&!M(l)&&null!==l.constructor&&!M(l.constructor)&&"function"==typeof l.constructor.isBuffer&&l.constructor.isBuffer(l)},isFormData:function(l){return"[object FormData]"===j.call(l)},isArrayBufferView:function(l){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(l):l&&l.buffer&&E(l.buffer)},isString:function(l){return"string"==typeof l},isNumber:function(l){return"number"==typeof l},isObject:D,isPlainObject:O,isUndefined:M,isDate:function(l){return"[object Date]"===j.call(l)},isFile:function(l){return"[object File]"===j.call(l)},isBlob:function(l){return"[object Blob]"===j.call(l)},isFunction:A,isStream:function(l){return D(l)&&A(l.pipe)},isURLSearchParams:function(l){return"[object URLSearchParams]"===j.call(l)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:_,merge:function l(){var d={};function c(c,Z){O(d[Z])&&O(c)?d[Z]=l(d[Z],c):O(c)?d[Z]=l({},c):Q(c)?d[Z]=c.slice():d[Z]=c}for(var Z=0,i=arguments.length;Z<i;Z++)_(arguments[Z],c);return d},extend:function(l,d,c){return _(d,(function(d,Z){l[Z]=c&&"function"==typeof d?w(d,c):d})),l},trim:function(l){return l.trim?l.trim():l.replace(/^\s+|\s+$/g,"")},stripBOM:function(l){return 65279===l.charCodeAt(0)&&(l=l.slice(1)),l}},$=q;function ll(l){return encodeURIComponent(l).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var dl=function(l,d,c){if(!d)return l;var Z;if(c)Z=c(d);else if($.isURLSearchParams(d))Z=d.toString();else{var i=[];$.forEach(d,(function(l,d){null!=l&&($.isArray(l)?d+="[]":l=[l],$.forEach(l,(function(l){$.isDate(l)?l=l.toISOString():$.isObject(l)&&(l=JSON.stringify(l)),i.push(ll(d)+"="+ll(l))})))})),Z=i.join("&")}if(Z){var t=l.indexOf("#");-1!==t&&(l=l.slice(0,t)),l+=(-1===l.indexOf("?")?"?":"&")+Z}return l},cl=q;function Zl(){this.handlers=[]}Zl.prototype.use=function(l,d,c){return this.handlers.push({fulfilled:l,rejected:d,synchronous:!!c&&c.synchronous,runWhen:c?c.runWhen:null}),this.handlers.length-1},Zl.prototype.eject=function(l){this.handlers[l]&&(this.handlers[l]=null)},Zl.prototype.forEach=function(l){cl.forEach(this.handlers,(function(d){null!==d&&l(d)}))};var il=Zl,tl="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function el(){throw new Error("setTimeout has not been defined")}function nl(){throw new Error("clearTimeout has not been defined")}var bl=el,ml=nl;function al(l){if(bl===setTimeout)return setTimeout(l,0);if((bl===el||!bl)&&setTimeout)return bl=setTimeout,setTimeout(l,0);try{return bl(l,0)}catch(d){try{return bl.call(null,l,0)}catch(d){return bl.call(this,l,0)}}}"function"==typeof tl.setTimeout&&(bl=setTimeout),"function"==typeof tl.clearTimeout&&(ml=clearTimeout);var ol,Gl=[],sl=!1,ul=-1;function Xl(){sl&&ol&&(sl=!1,ol.length?Gl=ol.concat(Gl):ul=-1,Gl.length&&hl())}function hl(){if(!sl){var l=al(Xl);sl=!0;for(var d=Gl.length;d;){for(ol=Gl,Gl=[];++ul<d;)ol&&ol[ul].run();ul=-1,d=Gl.length}ol=null,sl=!1,function(l){if(ml===clearTimeout)return clearTimeout(l);if((ml===nl||!ml)&&clearTimeout)return ml=clearTimeout,clearTimeout(l);try{ml(l)}catch(d){try{return ml.call(null,l)}catch(d){return ml.call(this,l)}}}(l)}}function pl(l,d){this.fun=l,this.array=d}function Vl(){}pl.prototype.run=function(){this.fun.apply(null,this.array)};var yl=Vl,Wl=Vl,Il=Vl,Rl=Vl,rl=Vl,Sl=Vl,Yl=Vl,Kl=tl.performance||{},Jl=Kl.now||Kl.mozNow||Kl.msNow||Kl.oNow||Kl.webkitNow||function(){return(new Date).getTime()},Nl=new Date,Hl={nextTick:function(l){var d=new Array(arguments.length-1);if(arguments.length>1)for(var c=1;c<arguments.length;c++)d[c-1]=arguments[c];Gl.push(new pl(l,d)),1!==Gl.length||sl||al(hl)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:yl,addListener:Wl,once:Il,off:Rl,removeListener:rl,removeAllListeners:Sl,emit:Yl,binding:function(l){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(l){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(l){var d=.001*Jl.call(Kl),c=Math.floor(d),Z=Math.floor(d%1*1e9);return l&&(c-=l[0],(Z-=l[1])<0&&(c--,Z+=1e9)),[c,Z]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-Nl)/1e3}},gl=Hl,Ll=q,Ul=function(l,d,c,Z,i){return l.config=d,c&&(l.code=c),l.request=Z,l.response=i,l.isAxiosError=!0,l.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},l},Cl={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},vl=Ul,kl=function(l,d,c,Z,i){var t=new Error(l);return vl(t,d,c,Z,i)},Tl=kl,xl=q,Fl=xl.isStandardBrowserEnv()?{write:function(l,d,c,Z,i,t){var e=[];e.push(l+"="+encodeURIComponent(d)),xl.isNumber(c)&&e.push("expires="+new Date(c).toGMTString()),xl.isString(Z)&&e.push("path="+Z),xl.isString(i)&&e.push("domain="+i),!0===t&&e.push("secure"),document.cookie=e.join("; ")},read:function(l){var d=document.cookie.match(new RegExp("(^|;\\s*)("+l+")=([^;]*)"));return d?decodeURIComponent(d[3]):null},remove:function(l){this.write(l,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},zl=q,Bl=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],fl=q,Pl=fl.isStandardBrowserEnv()?function(){var l,d=/(msie|trident)/i.test(navigator.userAgent),c=document.createElement("a");function Z(l){var Z=l;return d&&(c.setAttribute("href",Z),Z=c.href),c.setAttribute("href",Z),{href:c.href,protocol:c.protocol?c.protocol.replace(/:$/,""):"",host:c.host,search:c.search?c.search.replace(/^\?/,""):"",hash:c.hash?c.hash.replace(/^#/,""):"",hostname:c.hostname,port:c.port,pathname:"/"===c.pathname.charAt(0)?c.pathname:"/"+c.pathname}}return l=Z(window.location.href),function(d){var c=fl.isString(d)?Z(d):d;return c.protocol===l.protocol&&c.host===l.host}}():function(){return!0};function wl(l){this.message=l}wl.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},wl.prototype.__CANCEL__=!0;var jl=wl,Ql=q,Ml=Fl,El=dl,Dl=Pl,Ol=kl,Al=Cl,_l=jl,ql=q,$l=function(l,d){Ll.forEach(l,(function(c,Z){Z!==d&&Z.toUpperCase()===d.toUpperCase()&&(l[d]=c,delete l[Z])}))},ld=Ul,dd={"Content-Type":"application/x-www-form-urlencoded"};function cd(l,d){!ql.isUndefined(l)&&ql.isUndefined(l["Content-Type"])&&(l["Content-Type"]=d)}var Zd,id={transitional:Cl,adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==gl&&"[object process]"===Object.prototype.toString.call(gl))&&(Zd=function(l){return new Promise((function(d,c){var Z,i=l.data,t=l.headers,e=l.responseType;function n(){l.cancelToken&&l.cancelToken.unsubscribe(Z),l.signal&&l.signal.removeEventListener("abort",Z)}Ql.isFormData(i)&&delete t["Content-Type"];var b=new XMLHttpRequest;if(l.auth){var m=l.auth.username||"",a=l.auth.password?unescape(encodeURIComponent(l.auth.password)):"";t.Authorization="Basic "+btoa(m+":"+a)}var o=function(l,d){return l&&!function(l){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(l)}(d)?function(l,d){return d?l.replace(/\/+$/,"")+"/"+d.replace(/^\/+/,""):l}(l,d):d}(l.baseURL,l.url);function G(){if(b){var Z="getAllResponseHeaders"in b?function(l){var d,c,Z,i={};return l?(zl.forEach(l.split("\n"),(function(l){if(Z=l.indexOf(":"),d=zl.trim(l.substr(0,Z)).toLowerCase(),c=zl.trim(l.substr(Z+1)),d){if(i[d]&&Bl.indexOf(d)>=0)return;i[d]="set-cookie"===d?(i[d]?i[d]:[]).concat([c]):i[d]?i[d]+", "+c:c}})),i):i}(b.getAllResponseHeaders()):null;(function(l,d,c){var Z=c.config.validateStatus;c.status&&Z&&!Z(c.status)?d(Tl("Request failed with status code "+c.status,c.config,null,c.request,c)):l(c)})((function(l){d(l),n()}),(function(l){c(l),n()}),{data:e&&"text"!==e&&"json"!==e?b.response:b.responseText,status:b.status,statusText:b.statusText,headers:Z,config:l,request:b}),b=null}}if(b.open(l.method.toUpperCase(),El(o,l.params,l.paramsSerializer),!0),b.timeout=l.timeout,"onloadend"in b?b.onloadend=G:b.onreadystatechange=function(){b&&4===b.readyState&&(0!==b.status||b.responseURL&&0===b.responseURL.indexOf("file:"))&&setTimeout(G)},b.onabort=function(){b&&(c(Ol("Request aborted",l,"ECONNABORTED",b)),b=null)},b.onerror=function(){c(Ol("Network Error",l,null,b)),b=null},b.ontimeout=function(){var d=l.timeout?"timeout of "+l.timeout+"ms exceeded":"timeout exceeded",Z=l.transitional||Al;l.timeoutErrorMessage&&(d=l.timeoutErrorMessage),c(Ol(d,l,Z.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",b)),b=null},Ql.isStandardBrowserEnv()){var s=(l.withCredentials||Dl(o))&&l.xsrfCookieName?Ml.read(l.xsrfCookieName):void 0;s&&(t[l.xsrfHeaderName]=s)}"setRequestHeader"in b&&Ql.forEach(t,(function(l,d){void 0===i&&"content-type"===d.toLowerCase()?delete t[d]:b.setRequestHeader(d,l)})),Ql.isUndefined(l.withCredentials)||(b.withCredentials=!!l.withCredentials),e&&"json"!==e&&(b.responseType=l.responseType),"function"==typeof l.onDownloadProgress&&b.addEventListener("progress",l.onDownloadProgress),"function"==typeof l.onUploadProgress&&b.upload&&b.upload.addEventListener("progress",l.onUploadProgress),(l.cancelToken||l.signal)&&(Z=function(l){b&&(c(!l||l&&l.type?new _l("canceled"):l),b.abort(),b=null)},l.cancelToken&&l.cancelToken.subscribe(Z),l.signal&&(l.signal.aborted?Z():l.signal.addEventListener("abort",Z))),i||(i=null),b.send(i)}))}),Zd),transformRequest:[function(l,d){return $l(d,"Accept"),$l(d,"Content-Type"),ql.isFormData(l)||ql.isArrayBuffer(l)||ql.isBuffer(l)||ql.isStream(l)||ql.isFile(l)||ql.isBlob(l)?l:ql.isArrayBufferView(l)?l.buffer:ql.isURLSearchParams(l)?(cd(d,"application/x-www-form-urlencoded;charset=utf-8"),l.toString()):ql.isObject(l)||d&&"application/json"===d["Content-Type"]?(cd(d,"application/json"),function(l,d,c){if(ql.isString(l))try{return(0,JSON.parse)(l),ql.trim(l)}catch(l){if("SyntaxError"!==l.name)throw l}return(0,JSON.stringify)(l)}(l)):l}],transformResponse:[function(l){var d=this.transitional||id.transitional,c=d&&d.silentJSONParsing,Z=d&&d.forcedJSONParsing,i=!c&&"json"===this.responseType;if(i||Z&&ql.isString(l)&&l.length)try{return JSON.parse(l)}catch(l){if(i){if("SyntaxError"===l.name)throw ld(l,this,"E_JSON_PARSE");throw l}}return l}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(l){return l>=200&&l<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};ql.forEach(["delete","get","head"],(function(l){id.headers[l]={}})),ql.forEach(["post","put","patch"],(function(l){id.headers[l]=ql.merge(dd)}));var td=id,ed=q,nd=td,bd=function(l){return!(!l||!l.__CANCEL__)},md=q,ad=function(l,d,c){var Z=this||nd;return ed.forEach(c,(function(c){l=c.call(Z,l,d)})),l},od=bd,Gd=td,sd=jl;function ud(l){if(l.cancelToken&&l.cancelToken.throwIfRequested(),l.signal&&l.signal.aborted)throw new sd("canceled")}var Xd=q,hd=function(l,d){d=d||{};var c={};function Z(l,d){return Xd.isPlainObject(l)&&Xd.isPlainObject(d)?Xd.merge(l,d):Xd.isPlainObject(d)?Xd.merge({},d):Xd.isArray(d)?d.slice():d}function i(c){return Xd.isUndefined(d[c])?Xd.isUndefined(l[c])?void 0:Z(void 0,l[c]):Z(l[c],d[c])}function t(l){if(!Xd.isUndefined(d[l]))return Z(void 0,d[l])}function e(c){return Xd.isUndefined(d[c])?Xd.isUndefined(l[c])?void 0:Z(void 0,l[c]):Z(void 0,d[c])}function n(c){return c in d?Z(l[c],d[c]):c in l?Z(void 0,l[c]):void 0}var b={url:t,method:t,data:t,baseURL:e,transformRequest:e,transformResponse:e,paramsSerializer:e,timeout:e,timeoutMessage:e,withCredentials:e,adapter:e,responseType:e,xsrfCookieName:e,xsrfHeaderName:e,onUploadProgress:e,onDownloadProgress:e,decompress:e,maxContentLength:e,maxBodyLength:e,transport:e,httpAgent:e,httpsAgent:e,cancelToken:e,socketPath:e,responseEncoding:e,validateStatus:n};return Xd.forEach(Object.keys(l).concat(Object.keys(d)),(function(l){var d=b[l]||i,Z=d(l);Xd.isUndefined(Z)&&d!==n||(c[l]=Z)})),c},pd="0.26.1",Vd={};["object","boolean","number","function","string","symbol"].forEach((function(l,d){Vd[l]=function(c){return typeof c===l||"a"+(d<1?"n ":" ")+l}}));var yd={};Vd.transitional=function(l,d,c){function Z(l,d){return"[Axios v0.26.1] Transitional option '"+l+"'"+d+(c?". "+c:"")}return function(c,i,t){if(!1===l)throw new Error(Z(i," has been removed"+(d?" in "+d:"")));return d&&!yd[i]&&(yd[i]=!0,console.warn(Z(i," has been deprecated since v"+d+" and will be removed in the near future"))),!l||l(c,i,t)}};var Wd={assertOptions:function(l,d,c){if("object"!=typeof l)throw new TypeError("options must be an object");for(var Z=Object.keys(l),i=Z.length;i-- >0;){var t=Z[i],e=d[t];if(e){var n=l[t],b=void 0===n||e(n,t,l);if(!0!==b)throw new TypeError("option "+t+" must be "+b)}else if(!0!==c)throw Error("Unknown option "+t)}},validators:Vd},Id=q,Rd=dl,rd=il,Sd=function(l){return ud(l),l.headers=l.headers||{},l.data=ad.call(l,l.data,l.headers,l.transformRequest),l.headers=md.merge(l.headers.common||{},l.headers[l.method]||{},l.headers),md.forEach(["delete","get","head","post","put","patch","common"],(function(d){delete l.headers[d]})),(l.adapter||Gd.adapter)(l).then((function(d){return ud(l),d.data=ad.call(l,d.data,d.headers,l.transformResponse),d}),(function(d){return od(d)||(ud(l),d&&d.response&&(d.response.data=ad.call(l,d.response.data,d.response.headers,l.transformResponse))),Promise.reject(d)}))},Yd=hd,Kd=Wd,Jd=Kd.validators;function Nd(l){this.defaults=l,this.interceptors={request:new rd,response:new rd}}Nd.prototype.request=function(l,d){"string"==typeof l?(d=d||{}).url=l:d=l||{},(d=Yd(this.defaults,d)).method?d.method=d.method.toLowerCase():this.defaults.method?d.method=this.defaults.method.toLowerCase():d.method="get";var c=d.transitional;void 0!==c&&Kd.assertOptions(c,{silentJSONParsing:Jd.transitional(Jd.boolean),forcedJSONParsing:Jd.transitional(Jd.boolean),clarifyTimeoutError:Jd.transitional(Jd.boolean)},!1);var Z=[],i=!0;this.interceptors.request.forEach((function(l){"function"==typeof l.runWhen&&!1===l.runWhen(d)||(i=i&&l.synchronous,Z.unshift(l.fulfilled,l.rejected))}));var t,e=[];if(this.interceptors.response.forEach((function(l){e.push(l.fulfilled,l.rejected)})),!i){var n=[Sd,void 0];for(Array.prototype.unshift.apply(n,Z),n=n.concat(e),t=Promise.resolve(d);n.length;)t=t.then(n.shift(),n.shift());return t}for(var b=d;Z.length;){var m=Z.shift(),a=Z.shift();try{b=m(b)}catch(l){a(l);break}}try{t=Sd(b)}catch(l){return Promise.reject(l)}for(;e.length;)t=t.then(e.shift(),e.shift());return t},Nd.prototype.getUri=function(l){return l=Yd(this.defaults,l),Rd(l.url,l.params,l.paramsSerializer).replace(/^\?/,"")},Id.forEach(["delete","get","head","options"],(function(l){Nd.prototype[l]=function(d,c){return this.request(Yd(c||{},{method:l,url:d,data:(c||{}).data}))}})),Id.forEach(["post","put","patch"],(function(l){Nd.prototype[l]=function(d,c,Z){return this.request(Yd(Z||{},{method:l,url:d,data:c}))}}));var Hd=Nd,gd=jl;function Ld(l){if("function"!=typeof l)throw new TypeError("executor must be a function.");var d;this.promise=new Promise((function(l){d=l}));var c=this;this.promise.then((function(l){if(c._listeners){var d,Z=c._listeners.length;for(d=0;d<Z;d++)c._listeners[d](l);c._listeners=null}})),this.promise.then=function(l){var d,Z=new Promise((function(l){c.subscribe(l),d=l})).then(l);return Z.cancel=function(){c.unsubscribe(d)},Z},l((function(l){c.reason||(c.reason=new gd(l),d(c.reason))}))}Ld.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},Ld.prototype.subscribe=function(l){this.reason?l(this.reason):this._listeners?this._listeners.push(l):this._listeners=[l]},Ld.prototype.unsubscribe=function(l){if(this._listeners){var d=this._listeners.indexOf(l);-1!==d&&this._listeners.splice(d,1)}},Ld.source=function(){var l;return{token:new Ld((function(d){l=d})),cancel:l}};var Ud=Ld,Cd=q,vd=q,kd=P,Td=Hd,xd=hd,Fd=function l(d){var c=new Td(d),Z=kd(Td.prototype.request,c);return vd.extend(Z,Td.prototype,c),vd.extend(Z,c),Z.create=function(c){return l(xd(d,c))},Z}(td);Fd.Axios=Td,Fd.Cancel=jl,Fd.CancelToken=Ud,Fd.isCancel=bd,Fd.VERSION=pd,Fd.all=function(l){return Promise.all(l)},Fd.spread=function(l){return function(d){return l.apply(null,d)}},Fd.isAxiosError=function(l){return Cd.isObject(l)&&!0===l.isAxiosError},f.exports=Fd,f.exports.default=Fd;var zd,Bd=f.exports;let fd=zd=class{constructor(){this.attachToken=()=>Promise.resolve(),this.requestStartCallback=()=>null,this.requestSuccessCallback=()=>null,this.requestErrorCallback=()=>null,this.requestFinishCallback=()=>null,this.init=this.init.bind(this),this.setHttpRequestErrorCallback=this.setHttpRequestErrorCallback.bind(this),this.setHttpRequestFinishCallback=this.setHttpRequestFinishCallback.bind(this),this.setHttpRequestStartCallback=this.setHttpRequestStartCallback.bind(this),this.setHttpRequestSuccessCallback=this.setHttpRequestSuccessCallback.bind(this)}static getInstance(){return this.axiosInstance||(this.axiosInstance=Bd.create({withCredentials:!0}),this.clientInstance||(this.clientInstance=new zd),this.axiosInstance.interceptors.request.use((l=>d(this,void 0,void 0,(function*(){return yield this.clientInstance.requestHandler(l)})))),this.axiosInstance.interceptors.response.use((l=>this.clientInstance.successHandler(l)),(l=>this.clientInstance.errorHandler(l))),this.axiosInstance.all=Bd.all,this.axiosInstance.spread=Bd.spread,this.axiosInstance.init=this.clientInstance.init,this.axiosInstance.enableHandler=this.clientInstance.enableHandler,this.axiosInstance.disableHandler=this.clientInstance.disableHandler,this.axiosInstance.disableHandlerWithTimeout=this.clientInstance.disableHandlerWithTimeout,this.axiosInstance.setHttpRequestStartCallback=this.clientInstance.setHttpRequestStartCallback,this.axiosInstance.setHttpRequestSuccessCallback=this.clientInstance.setHttpRequestSuccessCallback,this.axiosInstance.setHttpRequestErrorCallback=this.clientInstance.setHttpRequestErrorCallback,this.axiosInstance.setHttpRequestFinishCallback=this.clientInstance.setHttpRequestFinishCallback),this.axiosInstance}requestHandler(l){return d(this,void 0,void 0,(function*(){if(yield this.attachToken(l),null==l?void 0:l.shouldEncodeToFormData){const d=null==l?void 0:l.data,c=new FormData;Object.keys(d).forEach((l=>{c.append(l,d[l])})),l.data=c}return zd.isHandlerEnabled&&this.requestStartCallback&&"function"==typeof this.requestStartCallback&&this.requestStartCallback(l),l}))}errorHandler(l){throw zd.isHandlerEnabled&&(this.requestErrorCallback&&"function"==typeof this.requestErrorCallback&&this.requestErrorCallback(l),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),l}successHandler(l){return zd.isHandlerEnabled&&(this.requestSuccessCallback&&"function"==typeof this.requestSuccessCallback&&this.requestSuccessCallback(l),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),l}init(l=!0,c){return d(this,void 0,void 0,(function*(){zd.isHandlerEnabled=l,this.attachToken=c}))}enableHandler(){zd.isHandlerEnabled=!0}disableHandler(){zd.isHandlerEnabled=!1}disableHandlerWithTimeout(l=zd.DEFAULT_HANDLER_DISABLE_TIMEOUT){zd.isHandlerEnabled=!1,setTimeout((()=>{zd.isHandlerEnabled=!0}),l)}setHttpRequestStartCallback(l){this.requestStartCallback=l}setHttpRequestSuccessCallback(l){this.requestSuccessCallback=l}setHttpRequestErrorCallback(l){this.requestErrorCallback=l}setHttpRequestFinishCallback(l){this.requestFinishCallback=l}};fd.DEFAULT_HANDLER_DISABLE_TIMEOUT=1e3,fd=zd=function(l,d,c,Z){var i,t=arguments.length,e=t<3?d:null===Z?Z=Object.getOwnPropertyDescriptor(d,c):Z;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)e=Reflect.decorate(l,d,c,Z);else for(var n=l.length-1;n>=0;n--)(i=l[n])&&(e=(t<3?i(e):t>3?i(d,c,e):i(d,c))||e);return t>3&&e&&Object.defineProperty(d,c,e),e}([l=>{}],fd);class Pd{setData(l,c){return d(this,void 0,void 0,(function*(){localStorage.setItem(l,c)}))}getData(l){var c;return d(this,void 0,void 0,(function*(){return null!==(c=localStorage.getItem(l))&&void 0!==c?c:"{}"}))}removeData(l){return d(this,void 0,void 0,(function*(){localStorage.removeItem(l)}))}}class wd{constructor(){this._data=new Map}setData(l,c){return d(this,void 0,void 0,(function*(){this._data.set(l,c)}))}getData(l){var c,Z;return d(this,void 0,void 0,(function*(){return null!==(Z=null===(c=this._data)||void 0===c?void 0:c.get(l))&&void 0!==Z?Z:"{}"}))}removeData(l){return d(this,void 0,void 0,(function*(){this._data.delete(l)}))}}class jd{setData(l,c){return d(this,void 0,void 0,(function*(){sessionStorage.setItem(l,c)}))}getData(l){var c;return d(this,void 0,void 0,(function*(){return null!==(c=sessionStorage.getItem(l))&&void 0!==c?c:"{}"}))}removeData(l){return d(this,void 0,void 0,(function*(){sessionStorage.removeItem(l)}))}}var Qd=[],Md=[],Ed="undefined"!=typeof Uint8Array?Uint8Array:Array,Dd=!1;function Od(){Dd=!0;for(var l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",d=0,c=l.length;d<c;++d)Qd[d]=l[d],Md[l.charCodeAt(d)]=d;Md["-".charCodeAt(0)]=62,Md["_".charCodeAt(0)]=63}function Ad(l,d,c){for(var Z,i,t=[],e=d;e<c;e+=3)Z=(l[e]<<16)+(l[e+1]<<8)+l[e+2],t.push(Qd[(i=Z)>>18&63]+Qd[i>>12&63]+Qd[i>>6&63]+Qd[63&i]);return t.join("")}function _d(l){var d;Dd||Od();for(var c=l.length,Z=c%3,i="",t=[],e=16383,n=0,b=c-Z;n<b;n+=e)t.push(Ad(l,n,n+e>b?b:n+e));return 1===Z?(d=l[c-1],i+=Qd[d>>2],i+=Qd[d<<4&63],i+="=="):2===Z&&(d=(l[c-2]<<8)+l[c-1],i+=Qd[d>>10],i+=Qd[d>>4&63],i+=Qd[d<<2&63],i+="="),t.push(i),t.join("")}function qd(l,d,c,Z,i){var t,e,n=8*i-Z-1,b=(1<<n)-1,m=b>>1,a=-7,o=c?i-1:0,G=c?-1:1,s=l[d+o];for(o+=G,t=s&(1<<-a)-1,s>>=-a,a+=n;a>0;t=256*t+l[d+o],o+=G,a-=8);for(e=t&(1<<-a)-1,t>>=-a,a+=Z;a>0;e=256*e+l[d+o],o+=G,a-=8);if(0===t)t=1-m;else{if(t===b)return e?NaN:1/0*(s?-1:1);e+=Math.pow(2,Z),t-=m}return(s?-1:1)*e*Math.pow(2,t-Z)}function $d(l,d,c,Z,i,t){var e,n,b,m=8*t-i-1,a=(1<<m)-1,o=a>>1,G=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,s=Z?0:t-1,u=Z?1:-1,X=d<0||0===d&&1/d<0?1:0;for(d=Math.abs(d),isNaN(d)||d===1/0?(n=isNaN(d)?1:0,e=a):(e=Math.floor(Math.log(d)/Math.LN2),d*(b=Math.pow(2,-e))<1&&(e--,b*=2),(d+=e+o>=1?G/b:G*Math.pow(2,1-o))*b>=2&&(e++,b/=2),e+o>=a?(n=0,e=a):e+o>=1?(n=(d*b-1)*Math.pow(2,i),e+=o):(n=d*Math.pow(2,o-1)*Math.pow(2,i),e=0));i>=8;l[c+s]=255&n,s+=u,n/=256,i-=8);for(e=e<<i|n,m+=i;m>0;l[c+s]=255&e,s+=u,e/=256,m-=8);l[c+s-u]|=128*X}var lc={}.toString,dc=Array.isArray||function(l){return"[object Array]"==lc.call(l)};tc.TYPED_ARRAY_SUPPORT=void 0===tl.TYPED_ARRAY_SUPPORT||tl.TYPED_ARRAY_SUPPORT;var cc=Zc();function Zc(){return tc.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function ic(l,d){if(Zc()<d)throw new RangeError("Invalid typed array length");return tc.TYPED_ARRAY_SUPPORT?(l=new Uint8Array(d)).__proto__=tc.prototype:(null===l&&(l=new tc(d)),l.length=d),l}function tc(l,d,c){if(!(tc.TYPED_ARRAY_SUPPORT||this instanceof tc))return new tc(l,d,c);if("number"==typeof l){if("string"==typeof d)throw new Error("If encoding is specified then the first argument must be a string");return bc(this,l)}return ec(this,l,d,c)}function ec(l,d,c,Z){if("number"==typeof d)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&d instanceof ArrayBuffer?function(l,d,c,Z){if(d.byteLength,c<0||d.byteLength<c)throw new RangeError("'offset' is out of bounds");if(d.byteLength<c+(Z||0))throw new RangeError("'length' is out of bounds");return d=void 0===c&&void 0===Z?new Uint8Array(d):void 0===Z?new Uint8Array(d,c):new Uint8Array(d,c,Z),tc.TYPED_ARRAY_SUPPORT?(l=d).__proto__=tc.prototype:l=mc(l,d),l}(l,d,c,Z):"string"==typeof d?function(l,d,c){if("string"==typeof c&&""!==c||(c="utf8"),!tc.isEncoding(c))throw new TypeError('"encoding" must be a valid string encoding');var Z=0|Gc(d,c),i=(l=ic(l,Z)).write(d,c);return i!==Z&&(l=l.slice(0,i)),l}(l,d,c):function(l,d){if(oc(d)){var c=0|ac(d.length);return 0===(l=ic(l,c)).length||d.copy(l,0,0,c),l}if(d){if("undefined"!=typeof ArrayBuffer&&d.buffer instanceof ArrayBuffer||"length"in d)return"number"!=typeof d.length||(Z=d.length)!=Z?ic(l,0):mc(l,d);if("Buffer"===d.type&&dc(d.data))return mc(l,d.data)}var Z;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(l,d)}function nc(l){if("number"!=typeof l)throw new TypeError('"size" argument must be a number');if(l<0)throw new RangeError('"size" argument must not be negative')}function bc(l,d){if(nc(d),l=ic(l,d<0?0:0|ac(d)),!tc.TYPED_ARRAY_SUPPORT)for(var c=0;c<d;++c)l[c]=0;return l}function mc(l,d){var c=d.length<0?0:0|ac(d.length);l=ic(l,c);for(var Z=0;Z<c;Z+=1)l[Z]=255&d[Z];return l}function ac(l){if(l>=Zc())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Zc().toString(16)+" bytes");return 0|l}function oc(l){return!(null==l||!l._isBuffer)}function Gc(l,d){if(oc(l))return l.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(l)||l instanceof ArrayBuffer))return l.byteLength;"string"!=typeof l&&(l=""+l);var c=l.length;if(0===c)return 0;for(var Z=!1;;)switch(d){case"ascii":case"latin1":case"binary":return c;case"utf8":case"utf-8":case void 0:return zc(l).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*c;case"hex":return c>>>1;case"base64":return Bc(l).length;default:if(Z)return zc(l).length;d=(""+d).toLowerCase(),Z=!0}}function sc(l,d,c){var Z=!1;if((void 0===d||d<0)&&(d=0),d>this.length)return"";if((void 0===c||c>this.length)&&(c=this.length),c<=0)return"";if((c>>>=0)<=(d>>>=0))return"";for(l||(l="utf8");;)switch(l){case"hex":return Nc(this,d,c);case"utf8":case"utf-8":return Sc(this,d,c);case"ascii":return Kc(this,d,c);case"latin1":case"binary":return Jc(this,d,c);case"base64":return rc(this,d,c);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Hc(this,d,c);default:if(Z)throw new TypeError("Unknown encoding: "+l);l=(l+"").toLowerCase(),Z=!0}}function uc(l,d,c){var Z=l[d];l[d]=l[c],l[c]=Z}function Xc(l,d,c,Z,i){if(0===l.length)return-1;if("string"==typeof c?(Z=c,c=0):c>2147483647?c=2147483647:c<-2147483648&&(c=-2147483648),c=+c,isNaN(c)&&(c=i?0:l.length-1),c<0&&(c=l.length+c),c>=l.length){if(i)return-1;c=l.length-1}else if(c<0){if(!i)return-1;c=0}if("string"==typeof d&&(d=tc.from(d,Z)),oc(d))return 0===d.length?-1:hc(l,d,c,Z,i);if("number"==typeof d)return d&=255,tc.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(l,d,c):Uint8Array.prototype.lastIndexOf.call(l,d,c):hc(l,[d],c,Z,i);throw new TypeError("val must be string, number or Buffer")}function hc(l,d,c,Z,i){var t,e=1,n=l.length,b=d.length;if(void 0!==Z&&("ucs2"===(Z=String(Z).toLowerCase())||"ucs-2"===Z||"utf16le"===Z||"utf-16le"===Z)){if(l.length<2||d.length<2)return-1;e=2,n/=2,b/=2,c/=2}function m(l,d){return 1===e?l[d]:l.readUInt16BE(d*e)}if(i){var a=-1;for(t=c;t<n;t++)if(m(l,t)===m(d,-1===a?0:t-a)){if(-1===a&&(a=t),t-a+1===b)return a*e}else-1!==a&&(t-=t-a),a=-1}else for(c+b>n&&(c=n-b),t=c;t>=0;t--){for(var o=!0,G=0;G<b;G++)if(m(l,t+G)!==m(d,G)){o=!1;break}if(o)return t}return-1}function pc(l,d,c,Z){c=Number(c)||0;var i=l.length-c;Z?(Z=Number(Z))>i&&(Z=i):Z=i;var t=d.length;if(t%2!=0)throw new TypeError("Invalid hex string");Z>t/2&&(Z=t/2);for(var e=0;e<Z;++e){var n=parseInt(d.substr(2*e,2),16);if(isNaN(n))return e;l[c+e]=n}return e}function Vc(l,d,c,Z){return fc(zc(d,l.length-c),l,c,Z)}function yc(l,d,c,Z){return fc(function(l){for(var d=[],c=0;c<l.length;++c)d.push(255&l.charCodeAt(c));return d}(d),l,c,Z)}function Wc(l,d,c,Z){return yc(l,d,c,Z)}function Ic(l,d,c,Z){return fc(Bc(d),l,c,Z)}function Rc(l,d,c,Z){return fc(function(l,d){for(var c,Z,i,t=[],e=0;e<l.length&&!((d-=2)<0);++e)Z=(c=l.charCodeAt(e))>>8,i=c%256,t.push(i),t.push(Z);return t}(d,l.length-c),l,c,Z)}function rc(l,d,c){return 0===d&&c===l.length?_d(l):_d(l.slice(d,c))}function Sc(l,d,c){c=Math.min(l.length,c);for(var Z=[],i=d;i<c;){var t,e,n,b,m=l[i],a=null,o=m>239?4:m>223?3:m>191?2:1;if(i+o<=c)switch(o){case 1:m<128&&(a=m);break;case 2:128==(192&(t=l[i+1]))&&(b=(31&m)<<6|63&t)>127&&(a=b);break;case 3:t=l[i+1],e=l[i+2],128==(192&t)&&128==(192&e)&&(b=(15&m)<<12|(63&t)<<6|63&e)>2047&&(b<55296||b>57343)&&(a=b);break;case 4:t=l[i+1],e=l[i+2],n=l[i+3],128==(192&t)&&128==(192&e)&&128==(192&n)&&(b=(15&m)<<18|(63&t)<<12|(63&e)<<6|63&n)>65535&&b<1114112&&(a=b)}null===a?(a=65533,o=1):a>65535&&(a-=65536,Z.push(a>>>10&1023|55296),a=56320|1023&a),Z.push(a),i+=o}return function(l){var d=l.length;if(d<=Yc)return String.fromCharCode.apply(String,l);for(var c="",Z=0;Z<d;)c+=String.fromCharCode.apply(String,l.slice(Z,Z+=Yc));return c}(Z)}tc.poolSize=8192,tc._augment=function(l){return l.__proto__=tc.prototype,l},tc.from=function(l,d,c){return ec(null,l,d,c)},tc.TYPED_ARRAY_SUPPORT&&(tc.prototype.__proto__=Uint8Array.prototype,tc.__proto__=Uint8Array),tc.alloc=function(l,d,c){return function(l,d,c,Z){return nc(d),d<=0?ic(l,d):void 0!==c?"string"==typeof Z?ic(l,d).fill(c,Z):ic(l,d).fill(c):ic(l,d)}(null,l,d,c)},tc.allocUnsafe=function(l){return bc(null,l)},tc.allocUnsafeSlow=function(l){return bc(null,l)},tc.isBuffer=Pc,tc.compare=function(l,d){if(!oc(l)||!oc(d))throw new TypeError("Arguments must be Buffers");if(l===d)return 0;for(var c=l.length,Z=d.length,i=0,t=Math.min(c,Z);i<t;++i)if(l[i]!==d[i]){c=l[i],Z=d[i];break}return c<Z?-1:Z<c?1:0},tc.isEncoding=function(l){switch(String(l).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},tc.concat=function(l,d){if(!dc(l))throw new TypeError('"list" argument must be an Array of Buffers');if(0===l.length)return tc.alloc(0);var c;if(void 0===d)for(d=0,c=0;c<l.length;++c)d+=l[c].length;var Z=tc.allocUnsafe(d),i=0;for(c=0;c<l.length;++c){var t=l[c];if(!oc(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(Z,i),i+=t.length}return Z},tc.byteLength=Gc,tc.prototype._isBuffer=!0,tc.prototype.swap16=function(){var l=this.length;if(l%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var d=0;d<l;d+=2)uc(this,d,d+1);return this},tc.prototype.swap32=function(){var l=this.length;if(l%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var d=0;d<l;d+=4)uc(this,d,d+3),uc(this,d+1,d+2);return this},tc.prototype.swap64=function(){var l=this.length;if(l%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var d=0;d<l;d+=8)uc(this,d,d+7),uc(this,d+1,d+6),uc(this,d+2,d+5),uc(this,d+3,d+4);return this},tc.prototype.toString=function(){var l=0|this.length;return 0===l?"":0===arguments.length?Sc(this,0,l):sc.apply(this,arguments)},tc.prototype.equals=function(l){if(!oc(l))throw new TypeError("Argument must be a Buffer");return this===l||0===tc.compare(this,l)},tc.prototype.inspect=function(){var l="";return this.length>0&&(l=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(l+=" ... ")),"<Buffer "+l+">"},tc.prototype.compare=function(l,d,c,Z,i){if(!oc(l))throw new TypeError("Argument must be a Buffer");if(void 0===d&&(d=0),void 0===c&&(c=l?l.length:0),void 0===Z&&(Z=0),void 0===i&&(i=this.length),d<0||c>l.length||Z<0||i>this.length)throw new RangeError("out of range index");if(Z>=i&&d>=c)return 0;if(Z>=i)return-1;if(d>=c)return 1;if(this===l)return 0;for(var t=(i>>>=0)-(Z>>>=0),e=(c>>>=0)-(d>>>=0),n=Math.min(t,e),b=this.slice(Z,i),m=l.slice(d,c),a=0;a<n;++a)if(b[a]!==m[a]){t=b[a],e=m[a];break}return t<e?-1:e<t?1:0},tc.prototype.includes=function(l,d,c){return-1!==this.indexOf(l,d,c)},tc.prototype.indexOf=function(l,d,c){return Xc(this,l,d,c,!0)},tc.prototype.lastIndexOf=function(l,d,c){return Xc(this,l,d,c,!1)},tc.prototype.write=function(l,d,c,Z){if(void 0===d)Z="utf8",c=this.length,d=0;else if(void 0===c&&"string"==typeof d)Z=d,c=this.length,d=0;else{if(!isFinite(d))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");d|=0,isFinite(c)?(c|=0,void 0===Z&&(Z="utf8")):(Z=c,c=void 0)}var i=this.length-d;if((void 0===c||c>i)&&(c=i),l.length>0&&(c<0||d<0)||d>this.length)throw new RangeError("Attempt to write outside buffer bounds");Z||(Z="utf8");for(var t=!1;;)switch(Z){case"hex":return pc(this,l,d,c);case"utf8":case"utf-8":return Vc(this,l,d,c);case"ascii":return yc(this,l,d,c);case"latin1":case"binary":return Wc(this,l,d,c);case"base64":return Ic(this,l,d,c);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Rc(this,l,d,c);default:if(t)throw new TypeError("Unknown encoding: "+Z);Z=(""+Z).toLowerCase(),t=!0}},tc.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Yc=4096;function Kc(l,d,c){var Z="";c=Math.min(l.length,c);for(var i=d;i<c;++i)Z+=String.fromCharCode(127&l[i]);return Z}function Jc(l,d,c){var Z="";c=Math.min(l.length,c);for(var i=d;i<c;++i)Z+=String.fromCharCode(l[i]);return Z}function Nc(l,d,c){var Z=l.length;(!d||d<0)&&(d=0),(!c||c<0||c>Z)&&(c=Z);for(var i="",t=d;t<c;++t)i+=Fc(l[t]);return i}function Hc(l,d,c){for(var Z=l.slice(d,c),i="",t=0;t<Z.length;t+=2)i+=String.fromCharCode(Z[t]+256*Z[t+1]);return i}function gc(l,d,c){if(l%1!=0||l<0)throw new RangeError("offset is not uint");if(l+d>c)throw new RangeError("Trying to access beyond buffer length")}function Lc(l,d,c,Z,i,t){if(!oc(l))throw new TypeError('"buffer" argument must be a Buffer instance');if(d>i||d<t)throw new RangeError('"value" argument is out of bounds');if(c+Z>l.length)throw new RangeError("Index out of range")}function Uc(l,d,c,Z){d<0&&(d=65535+d+1);for(var i=0,t=Math.min(l.length-c,2);i<t;++i)l[c+i]=(d&255<<8*(Z?i:1-i))>>>8*(Z?i:1-i)}function Cc(l,d,c,Z){d<0&&(d=4294967295+d+1);for(var i=0,t=Math.min(l.length-c,4);i<t;++i)l[c+i]=d>>>8*(Z?i:3-i)&255}function vc(l,d,c,Z,i,t){if(c+Z>l.length)throw new RangeError("Index out of range");if(c<0)throw new RangeError("Index out of range")}function kc(l,d,c,Z,i){return i||vc(l,0,c,4),$d(l,d,c,Z,23,4),c+4}function Tc(l,d,c,Z,i){return i||vc(l,0,c,8),$d(l,d,c,Z,52,8),c+8}tc.prototype.slice=function(l,d){var c,Z=this.length;if((l=~~l)<0?(l+=Z)<0&&(l=0):l>Z&&(l=Z),(d=void 0===d?Z:~~d)<0?(d+=Z)<0&&(d=0):d>Z&&(d=Z),d<l&&(d=l),tc.TYPED_ARRAY_SUPPORT)(c=this.subarray(l,d)).__proto__=tc.prototype;else{var i=d-l;c=new tc(i,void 0);for(var t=0;t<i;++t)c[t]=this[t+l]}return c},tc.prototype.readUIntLE=function(l,d,c){l|=0,d|=0,c||gc(l,d,this.length);for(var Z=this[l],i=1,t=0;++t<d&&(i*=256);)Z+=this[l+t]*i;return Z},tc.prototype.readUIntBE=function(l,d,c){l|=0,d|=0,c||gc(l,d,this.length);for(var Z=this[l+--d],i=1;d>0&&(i*=256);)Z+=this[l+--d]*i;return Z},tc.prototype.readUInt8=function(l,d){return d||gc(l,1,this.length),this[l]},tc.prototype.readUInt16LE=function(l,d){return d||gc(l,2,this.length),this[l]|this[l+1]<<8},tc.prototype.readUInt16BE=function(l,d){return d||gc(l,2,this.length),this[l]<<8|this[l+1]},tc.prototype.readUInt32LE=function(l,d){return d||gc(l,4,this.length),(this[l]|this[l+1]<<8|this[l+2]<<16)+16777216*this[l+3]},tc.prototype.readUInt32BE=function(l,d){return d||gc(l,4,this.length),16777216*this[l]+(this[l+1]<<16|this[l+2]<<8|this[l+3])},tc.prototype.readIntLE=function(l,d,c){l|=0,d|=0,c||gc(l,d,this.length);for(var Z=this[l],i=1,t=0;++t<d&&(i*=256);)Z+=this[l+t]*i;return Z>=(i*=128)&&(Z-=Math.pow(2,8*d)),Z},tc.prototype.readIntBE=function(l,d,c){l|=0,d|=0,c||gc(l,d,this.length);for(var Z=d,i=1,t=this[l+--Z];Z>0&&(i*=256);)t+=this[l+--Z]*i;return t>=(i*=128)&&(t-=Math.pow(2,8*d)),t},tc.prototype.readInt8=function(l,d){return d||gc(l,1,this.length),128&this[l]?-1*(255-this[l]+1):this[l]},tc.prototype.readInt16LE=function(l,d){d||gc(l,2,this.length);var c=this[l]|this[l+1]<<8;return 32768&c?4294901760|c:c},tc.prototype.readInt16BE=function(l,d){d||gc(l,2,this.length);var c=this[l+1]|this[l]<<8;return 32768&c?4294901760|c:c},tc.prototype.readInt32LE=function(l,d){return d||gc(l,4,this.length),this[l]|this[l+1]<<8|this[l+2]<<16|this[l+3]<<24},tc.prototype.readInt32BE=function(l,d){return d||gc(l,4,this.length),this[l]<<24|this[l+1]<<16|this[l+2]<<8|this[l+3]},tc.prototype.readFloatLE=function(l,d){return d||gc(l,4,this.length),qd(this,l,!0,23,4)},tc.prototype.readFloatBE=function(l,d){return d||gc(l,4,this.length),qd(this,l,!1,23,4)},tc.prototype.readDoubleLE=function(l,d){return d||gc(l,8,this.length),qd(this,l,!0,52,8)},tc.prototype.readDoubleBE=function(l,d){return d||gc(l,8,this.length),qd(this,l,!1,52,8)},tc.prototype.writeUIntLE=function(l,d,c,Z){l=+l,d|=0,c|=0,Z||Lc(this,l,d,c,Math.pow(2,8*c)-1,0);var i=1,t=0;for(this[d]=255&l;++t<c&&(i*=256);)this[d+t]=l/i&255;return d+c},tc.prototype.writeUIntBE=function(l,d,c,Z){l=+l,d|=0,c|=0,Z||Lc(this,l,d,c,Math.pow(2,8*c)-1,0);var i=c-1,t=1;for(this[d+i]=255&l;--i>=0&&(t*=256);)this[d+i]=l/t&255;return d+c},tc.prototype.writeUInt8=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,1,255,0),tc.TYPED_ARRAY_SUPPORT||(l=Math.floor(l)),this[d]=255&l,d+1},tc.prototype.writeUInt16LE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,2,65535,0),tc.TYPED_ARRAY_SUPPORT?(this[d]=255&l,this[d+1]=l>>>8):Uc(this,l,d,!0),d+2},tc.prototype.writeUInt16BE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,2,65535,0),tc.TYPED_ARRAY_SUPPORT?(this[d]=l>>>8,this[d+1]=255&l):Uc(this,l,d,!1),d+2},tc.prototype.writeUInt32LE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,4,4294967295,0),tc.TYPED_ARRAY_SUPPORT?(this[d+3]=l>>>24,this[d+2]=l>>>16,this[d+1]=l>>>8,this[d]=255&l):Cc(this,l,d,!0),d+4},tc.prototype.writeUInt32BE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,4,4294967295,0),tc.TYPED_ARRAY_SUPPORT?(this[d]=l>>>24,this[d+1]=l>>>16,this[d+2]=l>>>8,this[d+3]=255&l):Cc(this,l,d,!1),d+4},tc.prototype.writeIntLE=function(l,d,c,Z){if(l=+l,d|=0,!Z){var i=Math.pow(2,8*c-1);Lc(this,l,d,c,i-1,-i)}var t=0,e=1,n=0;for(this[d]=255&l;++t<c&&(e*=256);)l<0&&0===n&&0!==this[d+t-1]&&(n=1),this[d+t]=(l/e>>0)-n&255;return d+c},tc.prototype.writeIntBE=function(l,d,c,Z){if(l=+l,d|=0,!Z){var i=Math.pow(2,8*c-1);Lc(this,l,d,c,i-1,-i)}var t=c-1,e=1,n=0;for(this[d+t]=255&l;--t>=0&&(e*=256);)l<0&&0===n&&0!==this[d+t+1]&&(n=1),this[d+t]=(l/e>>0)-n&255;return d+c},tc.prototype.writeInt8=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,1,127,-128),tc.TYPED_ARRAY_SUPPORT||(l=Math.floor(l)),l<0&&(l=255+l+1),this[d]=255&l,d+1},tc.prototype.writeInt16LE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,2,32767,-32768),tc.TYPED_ARRAY_SUPPORT?(this[d]=255&l,this[d+1]=l>>>8):Uc(this,l,d,!0),d+2},tc.prototype.writeInt16BE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,2,32767,-32768),tc.TYPED_ARRAY_SUPPORT?(this[d]=l>>>8,this[d+1]=255&l):Uc(this,l,d,!1),d+2},tc.prototype.writeInt32LE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,4,2147483647,-2147483648),tc.TYPED_ARRAY_SUPPORT?(this[d]=255&l,this[d+1]=l>>>8,this[d+2]=l>>>16,this[d+3]=l>>>24):Cc(this,l,d,!0),d+4},tc.prototype.writeInt32BE=function(l,d,c){return l=+l,d|=0,c||Lc(this,l,d,4,2147483647,-2147483648),l<0&&(l=4294967295+l+1),tc.TYPED_ARRAY_SUPPORT?(this[d]=l>>>24,this[d+1]=l>>>16,this[d+2]=l>>>8,this[d+3]=255&l):Cc(this,l,d,!1),d+4},tc.prototype.writeFloatLE=function(l,d,c){return kc(this,l,d,!0,c)},tc.prototype.writeFloatBE=function(l,d,c){return kc(this,l,d,!1,c)},tc.prototype.writeDoubleLE=function(l,d,c){return Tc(this,l,d,!0,c)},tc.prototype.writeDoubleBE=function(l,d,c){return Tc(this,l,d,!1,c)},tc.prototype.copy=function(l,d,c,Z){if(c||(c=0),Z||0===Z||(Z=this.length),d>=l.length&&(d=l.length),d||(d=0),Z>0&&Z<c&&(Z=c),Z===c)return 0;if(0===l.length||0===this.length)return 0;if(d<0)throw new RangeError("targetStart out of bounds");if(c<0||c>=this.length)throw new RangeError("sourceStart out of bounds");if(Z<0)throw new RangeError("sourceEnd out of bounds");Z>this.length&&(Z=this.length),l.length-d<Z-c&&(Z=l.length-d+c);var i,t=Z-c;if(this===l&&c<d&&d<Z)for(i=t-1;i>=0;--i)l[i+d]=this[i+c];else if(t<1e3||!tc.TYPED_ARRAY_SUPPORT)for(i=0;i<t;++i)l[i+d]=this[i+c];else Uint8Array.prototype.set.call(l,this.subarray(c,c+t),d);return t},tc.prototype.fill=function(l,d,c,Z){if("string"==typeof l){if("string"==typeof d?(Z=d,d=0,c=this.length):"string"==typeof c&&(Z=c,c=this.length),1===l.length){var i=l.charCodeAt(0);i<256&&(l=i)}if(void 0!==Z&&"string"!=typeof Z)throw new TypeError("encoding must be a string");if("string"==typeof Z&&!tc.isEncoding(Z))throw new TypeError("Unknown encoding: "+Z)}else"number"==typeof l&&(l&=255);if(d<0||this.length<d||this.length<c)throw new RangeError("Out of range index");if(c<=d)return this;var t;if(d>>>=0,c=void 0===c?this.length:c>>>0,l||(l=0),"number"==typeof l)for(t=d;t<c;++t)this[t]=l;else{var e=oc(l)?l:zc(new tc(l,Z).toString()),n=e.length;for(t=0;t<c-d;++t)this[t+d]=e[t%n]}return this};var xc=/[^+\/0-9A-Za-z-_]/g;function Fc(l){return l<16?"0"+l.toString(16):l.toString(16)}function zc(l,d){var c;d=d||1/0;for(var Z=l.length,i=null,t=[],e=0;e<Z;++e){if((c=l.charCodeAt(e))>55295&&c<57344){if(!i){if(c>56319){(d-=3)>-1&&t.push(239,191,189);continue}if(e+1===Z){(d-=3)>-1&&t.push(239,191,189);continue}i=c;continue}if(c<56320){(d-=3)>-1&&t.push(239,191,189),i=c;continue}c=65536+(i-55296<<10|c-56320)}else i&&(d-=3)>-1&&t.push(239,191,189);if(i=null,c<128){if((d-=1)<0)break;t.push(c)}else if(c<2048){if((d-=2)<0)break;t.push(c>>6|192,63&c|128)}else if(c<65536){if((d-=3)<0)break;t.push(c>>12|224,c>>6&63|128,63&c|128)}else{if(!(c<1114112))throw new Error("Invalid code point");if((d-=4)<0)break;t.push(c>>18|240,c>>12&63|128,c>>6&63|128,63&c|128)}}return t}function Bc(l){return function(l){var d,c,Z,i,t,e;Dd||Od();var n=l.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");t="="===l[n-2]?2:"="===l[n-1]?1:0,e=new Ed(3*n/4-t),Z=t>0?n-4:n;var b=0;for(d=0,c=0;d<Z;d+=4,c+=3)i=Md[l.charCodeAt(d)]<<18|Md[l.charCodeAt(d+1)]<<12|Md[l.charCodeAt(d+2)]<<6|Md[l.charCodeAt(d+3)],e[b++]=i>>16&255,e[b++]=i>>8&255,e[b++]=255&i;return 2===t?(i=Md[l.charCodeAt(d)]<<2|Md[l.charCodeAt(d+1)]>>4,e[b++]=255&i):1===t&&(i=Md[l.charCodeAt(d)]<<10|Md[l.charCodeAt(d+1)]<<4|Md[l.charCodeAt(d+2)]>>2,e[b++]=i>>8&255,e[b++]=255&i),e}(function(l){if((l=function(l){return l.trim?l.trim():l.replace(/^\s+|\s+$/g,"")}(l).replace(xc,"")).length<2)return"";for(;l.length%4!=0;)l+="=";return l}(l))}function fc(l,d,c,Z){for(var i=0;i<Z&&!(i+c>=d.length||i>=l.length);++i)d[i+c]=l[i];return i}function Pc(l){return null!=l&&(!!l._isBuffer||wc(l)||function(l){return"function"==typeof l.readFloatLE&&"function"==typeof l.slice&&wc(l.slice(0,0))}(l))}function wc(l){return!!l.constructor&&"function"==typeof l.constructor.isBuffer&&l.constructor.isBuffer(l)}var jc=Object.freeze({__proto__:null,Buffer:tc,INSPECT_MAX_BYTES:50,SlowBuffer:function(l){return+l!=l&&(l=0),tc.alloc(+l)},isBuffer:Pc,kMaxLength:cc}),Qc={exports:{}},Mc={},Ec={};Object.defineProperty(Ec,"__esModule",{value:!0}),Ec.default=function(l){var d=l.length,c=d%4;if(!c)return l;var Z=d,i=4-c,t=d+i,e=tc.alloc(t);for(e.write(l);i--;)e.write("=",Z++);return e.toString()},Object.defineProperty(Mc,"__esModule",{value:!0});var Dc=Ec;function Oc(l,d){return void 0===d&&(d="utf8"),tc.isBuffer(l)?_c(l.toString("base64")):_c(tc.from(l,d).toString("base64"))}function Ac(l){return l=l.toString(),Dc.default(l).replace(/\-/g,"+").replace(/_/g,"/")}function _c(l){return l.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}var qc,$c=Oc;$c.encode=Oc,$c.decode=function(l,d){return void 0===d&&(d="utf8"),tc.from(Ac(l),"base64").toString(d)},$c.toBase64=Ac,$c.fromBase64=_c,$c.toBuffer=function(l){return tc.from(Ac(l),"base64")},Mc.default=$c,(qc=Qc).exports=Mc.default,qc.exports.default=qc.exports;var lZ=Qc.exports,dZ={exports:{}};!function(l){!function(d,c){var Z={};!function(l){l.__esModule=!0,l.digestLength=32,l.blockSize=64;var d=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function c(l,c,Z,i,t){for(var e,n,b,m,a,o,G,s,u,X,h,p,V;t>=64;){for(e=c[0],n=c[1],b=c[2],m=c[3],a=c[4],o=c[5],G=c[6],s=c[7],X=0;X<16;X++)h=i+4*X,l[X]=(255&Z[h])<<24|(255&Z[h+1])<<16|(255&Z[h+2])<<8|255&Z[h+3];for(X=16;X<64;X++)p=((u=l[X-2])>>>17|u<<15)^(u>>>19|u<<13)^u>>>10,V=((u=l[X-15])>>>7|u<<25)^(u>>>18|u<<14)^u>>>3,l[X]=(p+l[X-7]|0)+(V+l[X-16]|0);for(X=0;X<64;X++)p=(((a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7))+(a&o^~a&G)|0)+(s+(d[X]+l[X]|0)|0)|0,V=((e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10))+(e&n^e&b^n&b)|0,s=G,G=o,o=a,a=m+p|0,m=b,b=n,n=e,e=p+V|0;c[0]+=e,c[1]+=n,c[2]+=b,c[3]+=m,c[4]+=a,c[5]+=o,c[6]+=G,c[7]+=s,i+=64,t-=64}return i}var Z=function(){function d(){this.digestLength=l.digestLength,this.blockSize=l.blockSize,this.state=new Int32Array(8),this.temp=new Int32Array(64),this.buffer=new Uint8Array(128),this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this.reset()}return d.prototype.reset=function(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this},d.prototype.clean=function(){for(var l=0;l<this.buffer.length;l++)this.buffer[l]=0;for(l=0;l<this.temp.length;l++)this.temp[l]=0;this.reset()},d.prototype.update=function(l,d){if(void 0===d&&(d=l.length),this.finished)throw new Error("SHA256: can't update because hash was finished.");var Z=0;if(this.bytesHashed+=d,this.bufferLength>0){for(;this.bufferLength<64&&d>0;)this.buffer[this.bufferLength++]=l[Z++],d--;64===this.bufferLength&&(c(this.temp,this.state,this.buffer,0,64),this.bufferLength=0)}for(d>=64&&(Z=c(this.temp,this.state,l,Z,d),d%=64);d>0;)this.buffer[this.bufferLength++]=l[Z++],d--;return this},d.prototype.finish=function(l){if(!this.finished){var d=this.bytesHashed,Z=this.bufferLength,i=d/536870912|0,t=d<<3,e=d%64<56?64:128;this.buffer[Z]=128;for(var n=Z+1;n<e-8;n++)this.buffer[n]=0;this.buffer[e-8]=i>>>24&255,this.buffer[e-7]=i>>>16&255,this.buffer[e-6]=i>>>8&255,this.buffer[e-5]=i>>>0&255,this.buffer[e-4]=t>>>24&255,this.buffer[e-3]=t>>>16&255,this.buffer[e-2]=t>>>8&255,this.buffer[e-1]=t>>>0&255,c(this.temp,this.state,this.buffer,0,e),this.finished=!0}for(n=0;n<8;n++)l[4*n+0]=this.state[n]>>>24&255,l[4*n+1]=this.state[n]>>>16&255,l[4*n+2]=this.state[n]>>>8&255,l[4*n+3]=this.state[n]>>>0&255;return this},d.prototype.digest=function(){var l=new Uint8Array(this.digestLength);return this.finish(l),l},d.prototype._saveState=function(l){for(var d=0;d<this.state.length;d++)l[d]=this.state[d]},d.prototype._restoreState=function(l,d){for(var c=0;c<this.state.length;c++)this.state[c]=l[c];this.bytesHashed=d,this.finished=!1,this.bufferLength=0},d}();l.Hash=Z;var i=function(){function l(l){this.inner=new Z,this.outer=new Z,this.blockSize=this.inner.blockSize,this.digestLength=this.inner.digestLength;var d=new Uint8Array(this.blockSize);if(l.length>this.blockSize)(new Z).update(l).finish(d).clean();else for(var c=0;c<l.length;c++)d[c]=l[c];for(c=0;c<d.length;c++)d[c]^=54;for(this.inner.update(d),c=0;c<d.length;c++)d[c]^=106;for(this.outer.update(d),this.istate=new Uint32Array(8),this.ostate=new Uint32Array(8),this.inner._saveState(this.istate),this.outer._saveState(this.ostate),c=0;c<d.length;c++)d[c]=0}return l.prototype.reset=function(){return this.inner._restoreState(this.istate,this.inner.blockSize),this.outer._restoreState(this.ostate,this.outer.blockSize),this},l.prototype.clean=function(){for(var l=0;l<this.istate.length;l++)this.ostate[l]=this.istate[l]=0;this.inner.clean(),this.outer.clean()},l.prototype.update=function(l){return this.inner.update(l),this},l.prototype.finish=function(l){return this.outer.finished?this.outer.finish(l):(this.inner.finish(l),this.outer.update(l,this.digestLength).finish(l)),this},l.prototype.digest=function(){var l=new Uint8Array(this.digestLength);return this.finish(l),l},l}();function t(l){var d=(new Z).update(l),c=d.digest();return d.clean(),c}function e(l,d){var c=new i(l).update(d),Z=c.digest();return c.clean(),Z}function n(l,d,c,Z){var i=Z[0];if(0===i)throw new Error("hkdf: cannot expand more");d.reset(),i>1&&d.update(l),c&&d.update(c),d.update(Z),d.finish(l),Z[0]++}l.HMAC=i,l.hash=t,l.default=t,l.hmac=e;var b=new Uint8Array(l.digestLength);l.hkdf=function(l,d,c,Z){void 0===d&&(d=b),void 0===Z&&(Z=32);for(var t=new Uint8Array([1]),m=e(d,l),a=new i(m),o=new Uint8Array(a.digestLength),G=o.length,s=new Uint8Array(Z),u=0;u<Z;u++)G===o.length&&(n(o,a,c,t),G=0),s[u]=o[G++];return a.clean(),o.fill(0),t.fill(0),s},l.pbkdf2=function(l,d,c,Z){for(var t=new i(l),e=t.digestLength,n=new Uint8Array(4),b=new Uint8Array(e),m=new Uint8Array(e),a=new Uint8Array(Z),o=0;o*e<Z;o++){var G=o+1;n[0]=G>>>24&255,n[1]=G>>>16&255,n[2]=G>>>8&255,n[3]=G>>>0&255,t.reset(),t.update(d),t.update(n),t.finish(m);for(var s=0;s<e;s++)b[s]=m[s];for(s=2;s<=c;s++){t.reset(),t.update(m).finish(m);for(var u=0;u<e;u++)b[u]^=m[u]}for(s=0;s<e&&o*e+s<Z;s++)a[o*e+s]=b[s]}for(o=0;o<e;o++)b[o]=m[o]=0;for(o=0;o<4;o++)n[o]=0;return t.clean(),a}}(Z);var i=Z.default;for(var t in Z)i[t]=Z[t];l.exports=i}()}(dZ);var cZ=function(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}(dZ.exports),ZZ=crypto;function iZ(l){try{return null!=l&&"boolean"==typeof l.extractable&&"string"==typeof l.algorithm.name&&"string"==typeof l.type}catch(l){return!1}}const tZ=new TextEncoder,eZ=new TextDecoder,nZ=l=>{let d=l;d instanceof Uint8Array&&(d=eZ.decode(d)),d=d.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(l=>new Uint8Array(atob(l).split("").map((l=>l.charCodeAt(0)))))(d)}catch(l){throw new TypeError("The input to be decoded is not correctly encoded.")}};class bZ extends Error{constructor(l){var d;super(l),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,null===(d=Error.captureStackTrace)||void 0===d||d.call(Error,this,this.constructor)}static get code(){return"ERR_JOSE_GENERIC"}}class mZ extends bZ{constructor(l,d="unspecified",c="unspecified"){super(l),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=d,this.reason=c}static get code(){return"ERR_JWT_CLAIM_VALIDATION_FAILED"}}class aZ extends bZ{constructor(l,d="unspecified",c="unspecified"){super(l),this.code="ERR_JWT_EXPIRED",this.claim=d,this.reason=c}static get code(){return"ERR_JWT_EXPIRED"}}class oZ extends bZ{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class GZ extends bZ{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class sZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class uZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWT_INVALID"}static get code(){return"ERR_JWT_INVALID"}}class XZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWKS_INVALID"}static get code(){return"ERR_JWKS_INVALID"}}class hZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWKS_NO_MATCHING_KEY",this.message="no applicable key found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_NO_MATCHING_KEY"}}class pZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS",this.message="multiple matching keys found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_MULTIPLE_MATCHING_KEYS"}}class VZ extends bZ{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}function yZ(){return"function"==typeof WebSocketPair}function WZ(){try{return void 0!==gl.versions.node}catch(l){return!1}}function IZ(l,d="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${d} must be ${l}`)}function RZ(l,d){return l.name===d}function rZ(l){return parseInt(l.name.slice(4),10)}var SZ=(l,...d)=>{let c="Key must be ";if(d.length>2){const l=d.pop();c+=`one of type ${d.join(", ")}, or ${l}.`}else 2===d.length?c+=`one of type ${d[0]} or ${d[1]}.`:c+=`of type ${d[0]}.`;return null==l?c+=` Received ${l}`:"function"==typeof l&&l.name?c+=` Received function ${l.name}`:"object"==typeof l&&null!=l&&l.constructor&&l.constructor.name&&(c+=` Received an instance of ${l.constructor.name}`),c},YZ=l=>iZ(l);const KZ=["CryptoKey"];function JZ(l){if("object"!=typeof(d=l)||null===d||"[object Object]"!==Object.prototype.toString.call(l))return!1;var d;if(null===Object.getPrototypeOf(l))return!0;let c=l;for(;null!==Object.getPrototypeOf(c);)c=Object.getPrototypeOf(c);return Object.getPrototypeOf(l)===c}const NZ=async l=>{var d,c;const{algorithm:Z,keyUsages:i}=function(l){let d,c;switch(l.kty){case"oct":switch(l.alg){case"HS256":case"HS384":case"HS512":d={name:"HMAC",hash:`SHA-${l.alg.slice(-3)}`},c=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":throw new GZ(`${l.alg} keys cannot be imported as CryptoKey instances`);case"A128GCM":case"A192GCM":case"A256GCM":case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":d={name:"AES-GCM"},c=["encrypt","decrypt"];break;case"A128KW":case"A192KW":case"A256KW":d={name:"AES-KW"},c=["wrapKey","unwrapKey"];break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":d={name:"PBKDF2"},c=["deriveBits"];break;default:throw new GZ('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"RSA":switch(l.alg){case"PS256":case"PS384":case"PS512":d={name:"RSA-PSS",hash:`SHA-${l.alg.slice(-3)}`},c=l.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":d={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${l.alg.slice(-3)}`},c=l.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":d={name:"RSA-OAEP",hash:`SHA-${parseInt(l.alg.slice(-3),10)||1}`},c=l.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new GZ('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(l.alg){case"ES256":d={name:"ECDSA",namedCurve:"P-256"},c=l.d?["sign"]:["verify"];break;case"ES384":d={name:"ECDSA",namedCurve:"P-384"},c=l.d?["sign"]:["verify"];break;case"ES512":d={name:"ECDSA",namedCurve:"P-521"},c=l.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":d={name:"ECDH",namedCurve:l.crv},c=l.d?["deriveBits"]:[];break;default:throw new GZ('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case(yZ()||WZ())&&"OKP":if("EdDSA"!==l.alg)throw new GZ('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');switch(l.crv){case"Ed25519":d={name:"NODE-ED25519",namedCurve:"NODE-ED25519"},c=l.d?["sign"]:["verify"];break;case WZ()&&"Ed448":d={name:"NODE-ED448",namedCurve:"NODE-ED448"},c=l.d?["sign"]:["verify"];break;default:throw new GZ('Invalid or unsupported JWK "crv" (Subtype of Key Pair) Parameter value')}break;default:throw new GZ('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:d,keyUsages:c}}(l),t=[Z,null!==(d=l.ext)&&void 0!==d&&d,null!==(c=l.key_ops)&&void 0!==c?c:i];if("PBKDF2"===Z.name)return ZZ.subtle.importKey("raw",nZ(l.k),...t);const e={...l};return delete e.alg,ZZ.subtle.importKey("jwk",e,...t)},HZ=async(l,d,c,Z)=>{const i=await function(l,d,c){if(iZ(d))return function(l,d,...c){switch(d){case"HS256":case"HS384":case"HS512":{if(!RZ(l.algorithm,"HMAC"))throw IZ("HMAC");const c=parseInt(d.slice(2),10);if(rZ(l.algorithm.hash)!==c)throw IZ(`SHA-${c}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!RZ(l.algorithm,"RSASSA-PKCS1-v1_5"))throw IZ("RSASSA-PKCS1-v1_5");const c=parseInt(d.slice(2),10);if(rZ(l.algorithm.hash)!==c)throw IZ(`SHA-${c}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!RZ(l.algorithm,"RSA-PSS"))throw IZ("RSA-PSS");const c=parseInt(d.slice(2),10);if(rZ(l.algorithm.hash)!==c)throw IZ(`SHA-${c}`,"algorithm.hash");break}case WZ()&&"EdDSA":if("NODE-ED25519"!==l.algorithm.name&&"NODE-ED448"!==l.algorithm.name)throw IZ("NODE-ED25519 or NODE-ED448");break;case yZ()&&"EdDSA":if(!RZ(l.algorithm,"NODE-ED25519"))throw IZ("NODE-ED25519");break;case"ES256":case"ES384":case"ES512":{if(!RZ(l.algorithm,"ECDSA"))throw IZ("ECDSA");const c=function(l){switch(l){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(d);if(l.algorithm.namedCurve!==c)throw IZ(c,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}!function(l,d){if(d.length&&!d.some((d=>l.usages.includes(d)))){let l="CryptoKey does not support this operation, its usages must include ";if(d.length>2){const c=d.pop();l+=`one of ${d.join(", ")}, or ${c}.`}else 2===d.length?l+=`one of ${d[0]} or ${d[1]}.`:l+=`${d[0]}.`;throw new TypeError(l)}}(l,c)}(d,l,c),d;if(d instanceof Uint8Array){if(!l.startsWith("HS"))throw new TypeError(SZ(d,...KZ));return ZZ.subtle.importKey("raw",d,{hash:`SHA-${l.slice(-3)}`,name:"HMAC"},!1,[c])}throw new TypeError(SZ(d,...KZ,"Uint8Array"))}(l,d,"verify");((l,d)=>{if(l.startsWith("RS")||l.startsWith("PS")){const{modulusLength:c}=d.algorithm;if("number"!=typeof c||c<2048)throw new TypeError(`${l} requires key modulusLength to be 2048 bits or larger`)}})(l,i);const t=function(l,d){const c=`SHA-${l.slice(-3)}`;switch(l){case"HS256":case"HS384":case"HS512":return{hash:c,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:c,name:"RSA-PSS",saltLength:l.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:c,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:c,name:"ECDSA",namedCurve:d.namedCurve};case(yZ()||WZ())&&"EdDSA":const{namedCurve:Z}=d;return{name:Z,namedCurve:Z};default:throw new GZ(`alg ${l} is not supported either by JOSE or your javascript runtime`)}}(l,i.algorithm);try{return await ZZ.subtle.verify(t,i,c,Z)}catch(l){return!1}};async function gZ(l,d,c){var Z;if(!JZ(l))throw new sZ("Flattened JWS must be an object");if(void 0===l.protected&&void 0===l.header)throw new sZ('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==l.protected&&"string"!=typeof l.protected)throw new sZ("JWS Protected Header incorrect type");if(void 0===l.payload)throw new sZ("JWS Payload missing");if("string"!=typeof l.signature)throw new sZ("JWS Signature missing or incorrect type");if(void 0!==l.header&&!JZ(l.header))throw new sZ("JWS Unprotected Header incorrect type");let i={};if(l.protected){const d=nZ(l.protected);try{i=JSON.parse(eZ.decode(d))}catch(l){throw new sZ("JWS Protected Header is invalid")}}if(!((...l)=>{const d=l.filter(Boolean);if(0===d.length||1===d.length)return!0;let c;for(const Z of d){const l=Object.keys(Z);if(c&&0!==c.size)for(const d of l){if(c.has(d))return!1;c.add(d)}else c=new Set(l)}return!0})(i,l.header))throw new sZ("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const t={...i,...l.header},e=function(l,d,c,Z,i){if(void 0!==i.crit&&void 0===Z.crit)throw new l('"crit" (Critical) Header Parameter MUST be integrity protected');if(!Z||void 0===Z.crit)return new Set;if(!Array.isArray(Z.crit)||0===Z.crit.length||Z.crit.some((l=>"string"!=typeof l||0===l.length)))throw new l('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let t;t=void 0!==c?new Map([...Object.entries(c),...d.entries()]):d;for(const e of Z.crit){if(!t.has(e))throw new GZ(`Extension Header Parameter "${e}" is not recognized`);if(void 0===i[e])throw new l(`Extension Header Parameter "${e}" is missing`);if(t.get(e)&&void 0===Z[e])throw new l(`Extension Header Parameter "${e}" MUST be integrity protected`)}return new Set(Z.crit)}(sZ,new Map([["b64",!0]]),null==c?void 0:c.crit,i,t);let n=!0;if(e.has("b64")&&(n=i.b64,"boolean"!=typeof n))throw new sZ('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:b}=t;if("string"!=typeof b||!b)throw new sZ('JWS "alg" (Algorithm) Header Parameter missing or invalid');const m=c&&((l,d)=>{if(void 0!==d&&(!Array.isArray(d)||d.some((l=>"string"!=typeof l))))throw new TypeError('"algorithms" option must be an array of strings');if(d)return new Set(d)})(0,c.algorithms);if(m&&!m.has(b))throw new oZ('"alg" (Algorithm) Header Parameter not allowed');if(n){if("string"!=typeof l.payload)throw new sZ("JWS Payload must be a string")}else if("string"!=typeof l.payload&&!(l.payload instanceof Uint8Array))throw new sZ("JWS Payload must be a string or an Uint8Array instance");let a=!1;"function"==typeof d&&(d=await d(i,l),a=!0),((l,d,c)=>{l.startsWith("HS")||"dir"===l||l.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(l)?(l=>{if(!(l instanceof Uint8Array)){if(!YZ(l))throw new TypeError(SZ(l,...KZ,"Uint8Array"));if("secret"!==l.type)throw new TypeError(`${KZ.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(d):((l,d)=>{if(!YZ(l))throw new TypeError(SZ(l,...KZ));if("secret"===l.type)throw new TypeError(`${KZ.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===d&&"public"===l.type)throw new TypeError(`${KZ.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===d&&"public"===l.type)throw new TypeError(`${KZ.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(l.algorithm&&"verify"===d&&"private"===l.type)throw new TypeError(`${KZ.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(l.algorithm&&"encrypt"===d&&"private"===l.type)throw new TypeError(`${KZ.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(d,c)})(b,d,"verify");const o=function(...l){const d=l.reduce(((l,{length:d})=>l+d),0),c=new Uint8Array(d);let Z=0;return l.forEach((l=>{c.set(l,Z),Z+=l.length})),c}(tZ.encode(null!==(Z=l.protected)&&void 0!==Z?Z:""),tZ.encode("."),"string"==typeof l.payload?tZ.encode(l.payload):l.payload),G=nZ(l.signature);if(!(await HZ(b,d,G,o)))throw new VZ;let s;s=n?nZ(l.payload):"string"==typeof l.payload?tZ.encode(l.payload):l.payload;const u={payload:s};return void 0!==l.protected&&(u.protectedHeader=i),void 0!==l.header&&(u.unprotectedHeader=l.header),a?{...u,key:d}:u}const LZ=/^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;var UZ=l=>{const d=LZ.exec(l);if(!d)throw new TypeError("Invalid time period format");const c=parseFloat(d[1]);switch(d[2].toLowerCase()){case"sec":case"secs":case"second":case"seconds":case"s":return Math.round(c);case"minute":case"minutes":case"min":case"mins":case"m":return Math.round(60*c);case"hour":case"hours":case"hr":case"hrs":case"h":return Math.round(3600*c);case"day":case"days":case"d":return Math.round(86400*c);case"week":case"weeks":case"w":return Math.round(604800*c);default:return Math.round(31557600*c)}};const CZ=l=>l.toLowerCase().replace(/^application\//,"");var vZ=(l,d,c={})=>{const{typ:Z}=c;if(Z&&("string"!=typeof l.typ||CZ(l.typ)!==CZ(Z)))throw new mZ('unexpected "typ" JWT header value',"typ","check_failed");let i;try{i=JSON.parse(eZ.decode(d))}catch(l){}if(!JZ(i))throw new uZ("JWT Claims Set must be a top-level JSON object");const{issuer:t}=c;if(t&&!(Array.isArray(t)?t:[t]).includes(i.iss))throw new mZ('unexpected "iss" claim value',"iss","check_failed");const{subject:e}=c;if(e&&i.sub!==e)throw new mZ('unexpected "sub" claim value',"sub","check_failed");const{audience:n}=c;if(n&&(m="string"==typeof n?[n]:n,!("string"==typeof(b=i.aud)?m.includes(b):Array.isArray(b)&&m.some(Set.prototype.has.bind(new Set(b))))))throw new mZ('unexpected "aud" claim value',"aud","check_failed");var b,m;let a;switch(typeof c.clockTolerance){case"string":a=UZ(c.clockTolerance);break;case"number":a=c.clockTolerance;break;case"undefined":a=0;break;default:throw new TypeError("Invalid clockTolerance option type")}const{currentDate:o}=c,G=(s=o||new Date,Math.floor(s.getTime()/1e3));var s;if(void 0!==i.iat||c.maxTokenAge){if("number"!=typeof i.iat)throw new mZ('"iat" claim must be a number',"iat","invalid");if(void 0===i.exp&&i.iat>G+a)throw new mZ('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}if(void 0!==i.nbf){if("number"!=typeof i.nbf)throw new mZ('"nbf" claim must be a number',"nbf","invalid");if(i.nbf>G+a)throw new mZ('"nbf" claim timestamp check failed',"nbf","check_failed")}if(void 0!==i.exp){if("number"!=typeof i.exp)throw new mZ('"exp" claim must be a number',"exp","invalid");if(i.exp<=G-a)throw new aZ('"exp" claim timestamp check failed',"exp","check_failed")}if(c.maxTokenAge){const l=G-i.iat;if(l-a>("number"==typeof c.maxTokenAge?c.maxTokenAge:UZ(c.maxTokenAge)))throw new aZ('"iat" claim timestamp check failed (too far in the past)',"iat","check_failed");if(l<0-a)throw new mZ('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}return i};function kZ(l){return JZ(l)}class TZ{constructor(l){if(this._cached=new WeakMap,!function(l){return l&&"object"==typeof l&&Array.isArray(l.keys)&&l.keys.every(kZ)}(l))throw new XZ("JSON Web Key Set malformed");var d;this._jwks=(d=l,"function"==typeof structuredClone?structuredClone(d):JSON.parse(JSON.stringify(d)))}async getKey(l,d){const{alg:c,kid:Z}={...l,...d.header},i=this._jwks.keys.filter((l=>{let d=l.kty===function(l){switch("string"==typeof l&&l.slice(0,2)){case"RS":case"PS":return"RSA";case"ES":return"EC";case"Ed":return"OKP";default:throw new GZ('Unsupported "alg" value for a JSON Web Key Set')}}(c);if(d&&"string"==typeof Z&&(d=Z===l.kid),d&&"string"==typeof l.alg&&(d=c===l.alg),d&&"string"==typeof l.use&&(d="sig"===l.use),d&&Array.isArray(l.key_ops)&&(d=l.key_ops.includes("verify")),d&&"EdDSA"===c&&(d="Ed25519"===l.crv||"Ed448"===l.crv),d)switch(c){case"ES256":d="P-256"===l.crv;break;case"ES256K":d="secp256k1"===l.crv;break;case"ES384":d="P-384"===l.crv;break;case"ES512":d="P-521"===l.crv}return d})),{0:t,length:e}=i;if(0===e)throw new hZ;if(1!==e)throw new pZ;const n=this._cached.get(t)||this._cached.set(t,{}).get(t);if(void 0===n[c]){const l=await async function(l,d,c){if(!JZ(l))throw new TypeError("JWK must be an object");if(d||(d=l.alg),"string"!=typeof d||!d)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');switch(l.kty){case"oct":if("string"!=typeof l.k||!l.k)throw new TypeError('missing "k" (Key Value) Parameter value');return null!=c||(c=!0!==l.ext),c?NZ({...l,alg:d,ext:!1}):nZ(l.k);case"RSA":if(void 0!==l.oth)throw new GZ('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return NZ({...l,alg:d});default:throw new GZ('Unsupported "kty" (Key Type) Parameter value')}}({...t,ext:!0},c);if(l instanceof Uint8Array||"public"!==l.type)throw new XZ("JSON Web Key Set members must be public keys");n[c]=l}return n[c]}}var xZ={exports:{}},FZ={exports:{}},zZ=function(l){if(l.__esModule)return l;var d=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(l).forEach((function(c){var Z=Object.getOwnPropertyDescriptor(l,c);Object.defineProperty(d,c,Z.get?Z:{enumerable:!0,get:function(){return l[c]}})})),d}(jc);!function(l,d){var c=zZ,Z=c.Buffer;function i(l,d){for(var c in l)d[c]=l[c]}function t(l,d,c){return Z(l,d,c)}Z.from&&Z.alloc&&Z.allocUnsafe&&Z.allocUnsafeSlow?l.exports=c:(i(c,d),d.Buffer=t),t.prototype=Object.create(Z.prototype),i(Z,t),t.from=function(l,d,c){if("number"==typeof l)throw new TypeError("Argument must not be a number");return Z(l,d,c)},t.alloc=function(l,d,c){if("number"!=typeof l)throw new TypeError("Argument must be a number");var i=Z(l);return void 0!==d?"string"==typeof c?i.fill(d,c):i.fill(d):i.fill(0),i},t.allocUnsafe=function(l){if("number"!=typeof l)throw new TypeError("Argument must be a number");return Z(l)},t.allocUnsafeSlow=function(l){if("number"!=typeof l)throw new TypeError("Argument must be a number");return c.SlowBuffer(l)}}(FZ,FZ.exports);var BZ=65536,fZ=FZ.exports.Buffer,PZ=B.crypto||B.msCrypto;PZ&&PZ.getRandomValues?xZ.exports=function(l,d){if(l>4294967295)throw new RangeError("requested too many random bytes");var c=fZ.allocUnsafe(l);if(l>0)if(l>BZ)for(var Z=0;Z<l;Z+=BZ)PZ.getRandomValues(c.slice(Z,Z+BZ));else PZ.getRandomValues(c);return"function"==typeof d?gl.nextTick((function(){d(null,c)})):c}:xZ.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")};var wZ=xZ.exports;class jZ{base64URLEncode(l){return lZ.encode(l).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}base64URLDecode(l){return lZ.decode(l).toString()}hashSha256(l){return tc.from(cZ((new TextEncoder).encode(l)))}generateRandomBytes(l){return wZ(l)}verifyJwt(l,d,c,Z,i,t,e){return async function(l,d,c){var Z;const i=await async function(l,d,c){if(l instanceof Uint8Array&&(l=eZ.decode(l)),"string"!=typeof l)throw new sZ("Compact JWS must be a string or Uint8Array");const{0:Z,1:i,2:t,length:e}=l.split(".");if(3!==e)throw new sZ("Invalid Compact JWS");const n=await gZ({payload:i,protected:Z,signature:t},d,c),b={payload:n.payload,protectedHeader:n.protectedHeader};return"function"==typeof d?{...b,key:n.key}:b}(l,d,c);if((null===(Z=i.protectedHeader.crit)||void 0===Z?void 0:Z.includes("b64"))&&!1===i.protectedHeader.b64)throw new uZ("JWTs MUST NOT use unencoded payload");const t={payload:vZ(i.protectedHeader,i.payload,c),protectedHeader:i.protectedHeader};return"function"==typeof d?{...t,key:i.key}:t}(l,(n={keys:[d]},TZ.prototype.getKey.bind(new TZ(n))),{algorithms:c,audience:Z,clockTolerance:e,issuer:i,subject:t}).then((()=>Promise.resolve(!0)));var n}}const QZ=c=>d(void 0,void 0,void 0,(function*(){var Z;const i=(d=>{switch(d){case l.Storage.LocalStorage:return new Pd;case l.Storage.SessionStorage:return new jd;case l.Storage.BrowserMemory:return new wd;default:return new jd}})(c.storage),n=new jZ,b=new V(i,n);yield b.initialize(c);const a=new x(b),s=b.getDataLayer(),u=yield z((()=>d(void 0,void 0,void 0,(function*(){return b.signOut()}))),null!==(Z=c.storage)&&void 0!==Z?Z:l.Storage.SessionStorage,(l=>s.setSessionDataParameter(e,null!=l?l:"")));let X=!1;const h=fd.getInstance();let p,y,W=!0;(null==h?void 0:h.init)&&(yield h.init(!0,(l=>d(void 0,void 0,void 0,(function*(){Object.assign({attachToken:!0},l).attachToken&&(l.headers=Object.assign(Object.assign({},l.headers),{Authorization:`Bearer ${yield b.getAccessToken()}`}))})))));const r=()=>d(void 0,void 0,void 0,(function*(){var l,c,Z;const i=yield b.getOIDCServiceEndpoints(),t=yield s.getConfigData();u.initialize(t.clientID,null!==(l=i.checkSessionIframe)&&void 0!==l?l:"",(()=>d(void 0,void 0,void 0,(function*(){return(yield b.getBasicUserInfo()).sessionState}))),null!==(c=t.checkSessionInterval)&&void 0!==c?c:3,null!==(Z=t.sessionRefreshInterval)&&void 0!==Z?Z:300,t.signInRedirectURL,(l=>d(void 0,void 0,void 0,(function*(){return b.getAuthorizationURL(l)}))))})),S=l=>d(void 0,void 0,void 0,(function*(){var c,Z,i;let t=!0,e=!1;if(null==l?void 0:l.tokenEndpoint){t=!1;for(const d of[...null!==(Z=null===(c=yield s.getConfigData())||void 0===c?void 0:c.resourceServerURLs)&&void 0!==Z?Z:[],l.baseUrl])if(d&&(null===(i=l.tokenEndpoint)||void 0===i?void 0:i.startsWith(d))){e=!0;break}}return l.shouldReplayAfterRefresh&&s.setTemporaryDataParameter(v,JSON.stringify(l)),t||e?b.requestCustomGrant(l).then((c=>d(void 0,void 0,void 0,(function*(){return l.preventSignOutURLUpdate&&(X=!0),l.returnsSession?(a.refreshAccessTokenAutomatically(),b.getBasicUserInfo()):c})))).catch((l=>Promise.reject(l))):Promise.reject(new o("SPA-MAIN_THREAD_CLIENT-RCG-IV01","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified token endpoint in this request cannot be found among the `resourceServerURLs`"))})),Y=()=>d(void 0,void 0,void 0,(function*(){try{yield b.refreshAccessToken();const l=yield g();return l&&(yield S(l)),a.refreshAccessTokenAutomatically(),b.getBasicUserInfo()}catch(l){return Promise.reject(l)}})),N=(c,Z,i)=>d(void 0,void 0,void 0,(function*(){const t=yield s.getConfigData();if(t.storage===l.Storage.BrowserMemory&&t.enablePKCE){const l=F.getPKCE(G.extractPKCEKeyFromStateParam(i));yield b.setPKCECode(G.extractPKCEKeyFromStateParam(i),l)}return b.requestAccessToken(c,Z,i).then((()=>d(void 0,void 0,void 0,(function*(){return F.setSignOutURL(yield b.getSignOutURL()),a.clearRefreshTokenTimeout(),a.refreshAccessTokenAutomatically(),t.enableOIDCSessionManagement&&r(),b.getBasicUserInfo()})))).catch((l=>Promise.reject(l)))})),g=()=>d(void 0,void 0,void 0,(function*(){const l=yield s.getTemporaryDataParameter(v);return l?JSON.parse(l):null}));return{disableHttpHandler:()=>((null==h?void 0:h.disableHandler)&&h.disableHandler(),W=!1,!0),enableHttpHandler:()=>((null==h?void 0:h.enableHandler)&&h.enableHandler(),W=!0,!0),getAccessToken:()=>d(void 0,void 0,void 0,(function*(){return b.getAccessToken()})),getBasicUserInfo:()=>d(void 0,void 0,void 0,(function*(){return b.getBasicUserInfo()})),getDecodedIDToken:()=>d(void 0,void 0,void 0,(function*(){return b.getDecodedIDToken()})),getHttpClient:()=>h,getIDToken:()=>d(void 0,void 0,void 0,(function*(){return b.getIDToken()})),getOIDCServiceEndpoints:()=>d(void 0,void 0,void 0,(function*(){return b.getOIDCServiceEndpoints()})),httpRequest:l=>d(void 0,void 0,void 0,(function*(){var c,Z;let i=!1;const t=yield s.getConfigData();for(const d of[...null!==(c=yield null==t?void 0:t.resourceServerURLs)&&void 0!==c?c:[],t.baseUrl])if(d&&(null===(Z=null==l?void 0:l.url)||void 0===Z?void 0:Z.startsWith(d))){i=!0;break}if(i)return h.request(l).then((l=>Promise.resolve(l))).catch((c=>d(void 0,void 0,void 0,(function*(){var d,Z,i;if(401===(null===(d=null==c?void 0:c.response)||void 0===d?void 0:d.status)||!(null==c?void 0:c.response)){let d;try{d=yield Y()}catch(l){throw W&&("function"==typeof p&&(yield p(Object.assign(Object.assign({},c),{code:T}))),"function"==typeof y&&y()),new o("SPA-MAIN_THREAD_CLIENT-HR-SE01",null!==(Z=null==l?void 0:l.name)&&void 0!==Z?Z:"Refresh token request failed.",null!==(i=null==l?void 0:l.message)&&void 0!==i?i:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(d)try{const d=yield h.request(l);return Promise.resolve(d)}catch(l){return W&&("function"==typeof p&&(yield p(l)),"function"==typeof y&&y()),Promise.reject(l)}}return W&&("function"==typeof p&&(yield p(c)),"function"==typeof y&&y()),Promise.reject(c)}))));throw new o("SPA-MAIN_THREAD_CLIENT-HR-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`")})),httpRequestAll:l=>d(void 0,void 0,void 0,(function*(){var c,Z,i;let t=!0;const e=yield s.getConfigData();for(const d of l){let l=!1;for(const t of[...null!==(Z=null===(c=yield e)||void 0===c?void 0:c.resourceServerURLs)&&void 0!==Z?Z:[],e.baseUrl])if(t&&(null===(i=d.url)||void 0===i?void 0:i.startsWith(t))){l=!0;break}if(!l){t=!1;break}}const n=[];if(t)return l.forEach((l=>{n.push(h.request(l))})),(null==h?void 0:h.all)&&h.all(n).then((l=>Promise.resolve(l))).catch((l=>d(void 0,void 0,void 0,(function*(){var c,Z,i;if(401===(null===(c=null==l?void 0:l.response)||void 0===c?void 0:c.status)||!(null==l?void 0:l.response)){let c;try{c=yield b.refreshAccessToken()}catch(d){throw W&&("function"==typeof p&&(yield p(Object.assign(Object.assign({},l),{code:T}))),"function"==typeof y&&y()),new o("SPA-MAIN_THREAD_CLIENT-HRA-SE01",null!==(Z=null==d?void 0:d.name)&&void 0!==Z?Z:"Refresh token request failed.",null!==(i=null==d?void 0:d.message)&&void 0!==i?i:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(c)return h.all&&h.all(n).then((l=>Promise.resolve(l))).catch((l=>d(void 0,void 0,void 0,(function*(){return W&&("function"==typeof p&&(yield p(l)),"function"==typeof y&&y()),Promise.reject(l)}))))}return W&&("function"==typeof p&&(yield p(l)),"function"==typeof y&&y()),Promise.reject(l)}))));throw new o("SPA-MAIN_THREAD_CLIENT-HRA-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`")})),isAuthenticated:()=>d(void 0,void 0,void 0,(function*(){return b.isAuthenticated()})),refreshAccessToken:Y,requestCustomGrant:S,revokeAccessToken:()=>b.revokeAccessToken().then((()=>(u.reset(),a.clearRefreshTokenTimeout(),Promise.resolve(!0)))).catch((l=>Promise.reject(l))),setHttpRequestErrorCallback:l=>{p=l},setHttpRequestFinishCallback:l=>{(null==h?void 0:h.setHttpRequestFinishCallback)&&h.setHttpRequestFinishCallback(l),y=l},setHttpRequestStartCallback:l=>{(null==h?void 0:h.setHttpRequestStartCallback)&&h.setHttpRequestStartCallback(l)},setHttpRequestSuccessCallback:l=>{(null==h?void 0:h.setHttpRequestSuccessCallback)&&h.setHttpRequestSuccessCallback(l)},signIn:(c,Z,i,n)=>d(void 0,void 0,void 0,(function*(){var X,h,p;const V=yield s.getConfigData(),y=yield u.receivePromptNoneResponse((l=>d(void 0,void 0,void 0,(function*(){yield s.setSessionDataParameter(e,null!=l?l:"")}))));if(y)return Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});if(yield b.isAuthenticated())return a.clearRefreshTokenTimeout(),a.refreshAccessTokenAutomatically(),V.enableOIDCSessionManagement&&r(),Promise.resolve(yield b.getBasicUserInfo());let W,I,R;if((null==V?void 0:V.responseMode)===l.ResponseMode.formPost&&Z?(W=Z,I=null!=i?i:"",R=null!=n?n:""):(W=null!==(X=new URL(window.location.href).searchParams.get(t))&&void 0!==X?X:"",I=null!==(h=new URL(window.location.href).searchParams.get(e))&&void 0!==h?h:"",R=null!==(p=new URL(window.location.href).searchParams.get(m))&&void 0!==p?p:"",F.removeAuthorizationCode()),W&&R)return N(W,I,R);const S=new URL(window.location.href).searchParams.get(U),Y=new URL(window.location.href).searchParams.get(C);if(S){const l=new URL(window.location.href);throw l.searchParams.delete(U),l.searchParams.delete(C),history.pushState(null,document.title,l.toString()),new o("SPA-MAIN_THREAD_CLIENT-SI-SE01",S,null!=Y?Y:"")}return b.getAuthorizationURL(c).then((c=>d(void 0,void 0,void 0,(function*(){if(V.storage===l.Storage.BrowserMemory&&V.enablePKCE){const l=G.extractPKCEKeyFromStateParam(R);F.setPKCE(l,yield b.getPKCECode(R))}return location.href=c,yield F.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})}))))})),signOut:()=>d(void 0,void 0,void 0,(function*(){return(yield b.isAuthenticated())&&!X?location.href=yield b.signOut():(location.href=F.getSignOutURL(),yield s.removeOIDCProviderMetaData(),yield s.removeTemporaryData(),yield s.removeSessionData()),a.clearRefreshTokenTimeout(),yield F.waitTillPageRedirect(),!0})),trySignInSilently:()=>d(void 0,void 0,void 0,(function*(){var c;const Z=yield s.getConfigData();if(F.isInitializedSilentSignIn())return yield u.receivePromptNoneResponse(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const i=document.getElementById(K),t=null===(c=null==i?void 0:i.contentDocument)||void 0===c?void 0:c.getElementById(J);try{const d=yield b.getAuthorizationURL({prompt:"none",state:H}),c=new URL(d);c.searchParams.set("response_mode","query");const i=c.toString();if(Z.storage===l.Storage.BrowserMemory&&Z.enablePKCE){const l=c.searchParams.get(m);F.setPKCE(G.extractPKCEKeyFromStateParam(null!=l?l:""),yield b.getPKCECode(null!=l?l:""))}t.src=i}catch(l){return Promise.reject(l)}return new Promise(((l,c)=>{const Z=setTimeout((()=>{l(!1)}),1e4),i=t=>d(void 0,void 0,void 0,(function*(){var d,e,n;const b=t.data;(null==b?void 0:b.type)==R&&(window.removeEventListener("message",i),clearTimeout(Z),l(!1)),(null==b?void 0:b.type)==I&&(null===(d=null==b?void 0:b.data)||void 0===d?void 0:d.code)&&N(b.data.code,null===(e=null==b?void 0:b.data)||void 0===e?void 0:e.sessionState,null===(n=null==b?void 0:b.data)||void 0===n?void 0:n.state).then((d=>{window.removeEventListener("message",i),l(d)})).catch((l=>{window.removeEventListener("message",i),c(l)})).finally((()=>{clearTimeout(Z)}))}));window.addEventListener("message",i)}))})),updateConfig:l=>d(void 0,void 0,void 0,(function*(){const d=yield s.getConfigData(),c=!(d&&d.endpoints&&d.endpoints.checkSessionIframe&&l&&l.endpoints&&l.endpoints.checkSessionIframe&&d.endpoints.checkSessionIframe===l.endpoints.checkSessionIframe),Z=Object.assign(Object.assign({},d),l);yield b.updateConfig(Z),Z.enableOIDCSessionManagement&&c&&(u.reset(),r())}))}}));var MZ,EZ=("",null,!1,function(l){return MZ=MZ||function(l,d,c){var Z=void 0===d?null:d,i=function(l,d){var c=atob(l);if(d){for(var Z=new Uint8Array(c.length),i=0,t=c.length;i<t;++i)Z[i]=c.charCodeAt(i);return String.fromCharCode.apply(null,new Uint16Array(Z.buffer))}return c}(l,void 0!==c&&c),t=i.indexOf("\n",10)+1,e=i.substring(t)+(Z?"//# sourceMappingURL="+Z:""),n=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(n)}("",null,false),new Worker(MZ,l)});const DZ={checkSessionInterval:3,clientHost:origin,enableOIDCSessionManagement:!1,sessionRefreshInterval:300,storage:l.Storage.SessionStorage},OZ="primaryInstance";class AZ{constructor(l){this._initialized=!1,this._startedInitialize=!1,this._onSignInCallback=()=>null,this._onSignOutCallback=()=>null,this._onSignOutFailedCallback=()=>null,this._onEndUserSession=()=>null,this._onInitialize=()=>null,this._onCustomGrant=new Map,this._instanceID=l}_isInitialized(){return d(this,void 0,void 0,(function*(){if(!this._startedInitialize)return!1;let l=0;for(;!this._initialized;)1e4===l&&console.warn("It is taking longer than usual for the object to be initialized"),yield new Promise((l=>setTimeout(l,1))),l++;return!0}))}_validateMethod(){return d(this,void 0,void 0,(function*(){return(yield this._isInitialized())&&!!(yield this.isAuthenticated())||Promise.reject()}))}static getInstance(l){var d,c;return l&&(null===(d=this._instances)||void 0===d?void 0:d.get(l))?this._instances.get(l):!l&&(null===(c=this._instances)||void 0===c?void 0:c.get(OZ))?this._instances.get(OZ):l?(this._instances.set(l,new AZ(l)),this._instances.get(l)):(this._instances.set(OZ,new AZ(OZ)),this._instances.get(OZ))}initialize(c){var Z;return d(this,void 0,void 0,(function*(){if(this._storage=null!==(Z=c.storage)&&void 0!==Z?Z:l.Storage.SessionStorage,this._initialized=!1,this._startedInitialize=!0,this._storage!==l.Storage.WebWorker){if(!this._client){const l=c,d=Object.assign({},DZ);this._client=yield QZ(Object.assign(Object.assign({},d),l))}return this._initialized=!0,this._onInitialize&&this._onInitialize(!0),Promise.resolve(!0)}if(!this._client){const Z=c;return this._client=yield(c=>d(void 0,void 0,void 0,(function*(){var Z;let i;const n=null!==(Z=null==c?void 0:c.requestTimeout)&&void 0!==Z?Z:6e4;let b=!0,a=!1;const s=yield z((()=>d(void 0,void 0,void 0,(function*(){const l={type:y};try{return yield X(l)}catch(l){return F.getSignOutURL()}}))),c.storage,(l=>h(l))),u=new EZ,X=l=>{const d=new MessageChannel;return u.postMessage(l,[d.port2]),new Promise(((l,c)=>{const Z=setTimeout((()=>{c(new o("SPA-WEB_WORKER_CLIENT-COM-TO01","Operation timed out.","No response was received from the web worker for "+n/1e3+" since dispatching the request"))}),n);return d.port1.onmessage=({data:d})=>{if(clearTimeout(Z),null==d?void 0:d.success){const c=(null==d?void 0:d.data)?JSON.parse(null==d?void 0:d.data):null;(null==d?void 0:d.blob)&&(c.data=null==d?void 0:d.blob),l(c)}else c(d.error?JSON.parse(d.error):null)}}))},h=l=>X({data:l,type:"set_session_state"}),p=()=>X({type:"start_auto_refresh_token"}),V=()=>d(void 0,void 0,void 0,(function*(){var l,c,Z;const i=yield Y(),t=yield N();s.initialize(t.clientID,null!==(l=i.checkSessionIframe)&&void 0!==l?l:"",(()=>d(void 0,void 0,void 0,(function*(){return(yield g()).sessionState}))),null!==(c=t.checkSessionInterval)&&void 0!==c?c:3,null!==(Z=t.sessionRefreshInterval)&&void 0!==Z?Z:300,t.signInRedirectURL,(l=>d(void 0,void 0,void 0,(function*(){return(yield r(l)).authorizationURL}))))})),r=l=>d(void 0,void 0,void 0,(function*(){const c=yield N();return X({data:l,type:W}).then((l=>d(void 0,void 0,void 0,(function*(){var d;if(l.pkce&&c.enablePKCE){const c=G.extractPKCEKeyFromStateParam(null!==(d=new URL(l.authorizationURL).searchParams.get(m))&&void 0!==d?d:"");F.setPKCE(c,l.pkce)}return Promise.resolve(l)}))))})),S=(l,c,Z)=>d(void 0,void 0,void 0,(function*(){const d=yield N(),i=G.extractPKCEKeyFromStateParam(Z),t={data:{code:l,pkce:d.enablePKCE?F.getPKCE(i):void 0,sessionState:c,state:Z},type:"request_get_token"};return d.enablePKCE&&F.removePKCE(i),X(t).then((l=>X({type:"get_sign_out_url"}).then((c=>(F.setSignOutURL(c),d.enableOIDCSessionManagement&&V(),p(),Promise.resolve(l)))).catch((l=>Promise.reject(l))))).catch((l=>Promise.reject(l)))})),Y=()=>X({type:"get-oidc-service-endpoints"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l))),N=()=>X({type:"get_config_data"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l))),g=()=>X({type:"get-basic-user-info"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l))),L=()=>X({type:"is_authenticated"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l)));return{disableHttpHandler:()=>X({type:"disable_http_handler"}).then((()=>(b=!1,Promise.resolve(!0)))).catch((l=>Promise.reject(l))),enableHttpHandler:()=>X({type:"enable_http_handler"}).then((()=>(b=!0,Promise.resolve(!0)))).catch((l=>Promise.reject(l))),getBasicUserInfo:g,getDecodedIDToken:()=>X({type:"get-decoded-id-token"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l))),getIDToken:()=>X({type:"get_id_token"}).then((l=>Promise.resolve(l))).catch((l=>Promise.reject(l))),getOIDCServiceEndpoints:Y,httpRequest:l=>X({data:l,type:"http-request"}).then((l=>Promise.resolve(l))).catch((l=>d(void 0,void 0,void 0,(function*(){return b&&("function"==typeof i.requestErrorCallback&&(yield i.requestErrorCallback(l)),"function"==typeof i.requestFinishCallback&&i.requestFinishCallback()),Promise.reject(l)})))),httpRequestAll:l=>X({data:l,type:"http-request-all"}).then((l=>Promise.resolve(l))).catch((l=>d(void 0,void 0,void 0,(function*(){return b&&("function"==typeof i.requestErrorCallback&&(yield i.requestErrorCallback(l)),"function"==typeof i.requestFinishCallback&&i.requestFinishCallback()),Promise.reject(l)})))),initialize:()=>(i||(i={requestErrorCallback:()=>Promise.resolve(),requestFinishCallback:()=>null,requestStartCallback:()=>null,requestSuccessCallback:()=>null}),u.onmessage=({data:l})=>{switch(l.type){case"request-finish":(null==i?void 0:i.requestFinishCallback)&&(null==i||i.requestFinishCallback());break;case"request-start":(null==i?void 0:i.requestStartCallback)&&(null==i||i.requestStartCallback());break;case"request-success":(null==i?void 0:i.requestSuccessCallback)&&(null==i||i.requestSuccessCallback(l.data?JSON.parse(l.data):null))}},X({data:c,type:"init"}).then((()=>Promise.resolve(!0))).catch((l=>Promise.reject(l)))),isAuthenticated:L,refreshAccessToken:()=>X({type:"refresh_access-token"}),requestCustomGrant:l=>X({data:l,type:"request-custom-grant"}).then((d=>(l.preventSignOutURLUpdate&&(a=!0),Promise.resolve(d)))).catch((l=>Promise.reject(l))),revokeAccessToken:()=>X({type:"revoke-access-token"}).then((l=>(s.reset(),Promise.resolve(l)))).catch((l=>Promise.reject(l))),setHttpRequestErrorCallback:l=>{l&&"function"==typeof l&&(i.requestErrorCallback=l)},setHttpRequestFinishCallback:l=>{l&&"function"==typeof l&&(i.requestFinishCallback=l)},setHttpRequestStartCallback:l=>{l&&"function"==typeof l&&(i.requestStartCallback=l)},setHttpRequestSuccessCallback:l=>{l&&"function"==typeof l&&(i.requestSuccessCallback=l)},signIn:(c,Z,i,n)=>d(void 0,void 0,void 0,(function*(){var b,a,G;const u=yield N(),X=yield s.receivePromptNoneResponse((l=>d(void 0,void 0,void 0,(function*(){return h(l)}))));if(X)return Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const y=new URL(window.location.href).searchParams.get(U),W=new URL(window.location.href).searchParams.get(C);if(y){const l=new URL(window.location.href);throw l.searchParams.delete(U),l.searchParams.delete(C),history.pushState(null,document.title,l.toString()),new o("SPA-WEB_WORKER_CLIENT-SI-SE01",y,null!=W?W:"")}if(yield L())return yield p(),u.enableOIDCSessionManagement&&V(),g();let I,R,Y;return(null==u?void 0:u.responseMode)===l.ResponseMode.formPost&&Z?(I=Z,R=null!=i?i:"",Y=null!=n?n:""):(I=null!==(b=new URL(window.location.href).searchParams.get(t))&&void 0!==b?b:"",R=null!==(a=new URL(window.location.href).searchParams.get(e))&&void 0!==a?a:"",Y=null!==(G=new URL(window.location.href).searchParams.get(m))&&void 0!==G?G:"",F.removeAuthorizationCode()),I&&Y?S(I,R,Y):r(c).then((l=>d(void 0,void 0,void 0,(function*(){return location.href=l.authorizationURL,yield F.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})})))).catch((l=>Promise.reject(l)))})),signOut:()=>L().then((l=>d(void 0,void 0,void 0,(function*(){return l&&!a?X({type:y}).then((l=>d(void 0,void 0,void 0,(function*(){return window.location.href=l,yield F.waitTillPageRedirect(),Promise.resolve(!0)})))).catch((l=>Promise.reject(l))):(window.location.href=F.getSignOutURL(),yield F.waitTillPageRedirect(),Promise.resolve(!0))})))).catch((l=>Promise.reject(l))),trySignInSilently:()=>d(void 0,void 0,void 0,(function*(){var l,c;const Z=yield N();if(F.isInitializedSilentSignIn())return yield s.receivePromptNoneResponse(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const i=document.getElementById(K),t=null===(l=null==i?void 0:i.contentDocument)||void 0===l?void 0:l.getElementById(J),e={data:{prompt:"none",state:H},type:W};try{const l=yield X(e),d=G.extractPKCEKeyFromStateParam(null!==(c=new URL(l.authorizationURL).searchParams.get(m))&&void 0!==c?c:"");l.pkce&&Z.enablePKCE&&F.setPKCE(d,l.pkce);const i=l.authorizationURL,n=new URL(i);n.searchParams.set("response_mode","query");const b=n.toString();t.src=b}catch(l){return Promise.reject(l)}return new Promise(((l,c)=>{const Z=setTimeout((()=>{l(!1)}),1e4),i=t=>d(void 0,void 0,void 0,(function*(){var d,e,n,b;const m=t.data;(null==m?void 0:m.type)==R&&(window.removeEventListener("message",i),clearTimeout(Z),l(!1)),(null==m?void 0:m.type)==I&&(null===(d=null==m?void 0:m.data)||void 0===d?void 0:d.code)&&S(null===(e=null==m?void 0:m.data)||void 0===e?void 0:e.code,null===(n=null==m?void 0:m.data)||void 0===n?void 0:n.sessionState,null===(b=null==m?void 0:m.data)||void 0===b?void 0:b.state).then((d=>{window.removeEventListener("message",i),l(d)})).catch((l=>{window.removeEventListener("message",i),c(l)})).finally((()=>{clearTimeout(Z)}))}));window.addEventListener("message",i)}))})),updateConfig:l=>d(void 0,void 0,void 0,(function*(){const d=yield N(),c=!(d&&d.endpoints&&d.endpoints.checkSessionIframe&&l&&l.endpoints&&l.endpoints.checkSessionIframe&&d.endpoints.checkSessionIframe===l.endpoints.checkSessionIframe),Z=Object.assign(Object.assign({},d),l),i={data:Z,type:"update_config"};yield X(i),Z.enableOIDCSessionManagement&&c&&(s.reset(),V())}))}})))(Object.assign(Object.assign({},DZ),Z)),this._client.initialize().then((()=>(this._onInitialize&&this._onInitialize(!0),this._initialized=!0,Promise.resolve(!0)))).catch((l=>Promise.reject(l)))}return Promise.resolve(!0)}))}getBasicUserInfo(){var l;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.getBasicUserInfo()}))}signIn(l,c,Z,i){var t;return d(this,void 0,void 0,(function*(){if(yield this._isInitialized(),F.canContinueSignIn(Boolean(null==l?void 0:l.callOnlyOnRedirect),c))return null==l||delete l.callOnlyOnRedirect,null===(t=this._client)||void 0===t?void 0:t.signIn(l,c,Z,i).then((l=>(this._onSignInCallback&&(l.allowedScopes||l.displayName||l.email||l.username)&&this._onSignInCallback(l),l)))}))}trySignInSilently(){var l;return d(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!F.wasSignInCalled())return null===(l=this._client)||void 0===l?void 0:l.trySignInSilently().then((l=>{if(this._onSignInCallback&&l){const d=l;(d.allowedScopes||d.displayName||d.email||d.username)&&this._onSignInCallback(d)}return l}))}))}signOut(){var l,c;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null!==(c=yield null===(l=this._client)||void 0===l?void 0:l.signOut())&&void 0!==c&&c}))}httpRequest(l){var c;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(c=this._client)||void 0===c?void 0:c.httpRequest(l)}))}httpRequestAll(l){var c;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(c=this._client)||void 0===c?void 0:c.httpRequestAll(l)}))}requestCustomGrant(l){var c,Z;return d(this,void 0,void 0,(function*(){if(l.signInRequired,yield this._validateMethod(),!l.id)return Promise.reject(new o("SPA-AUTH_CLIENT-RCG-NF01","The custom grant request id not found.","The id attribute of the custom grant config object passed as an argument should have a value."));const d=yield null===(c=this._client)||void 0===c?void 0:c.requestCustomGrant(l),i=this._onCustomGrant.get(l.id);return i&&i(null===(Z=this._onCustomGrant)||void 0===Z?void 0:Z.get(l.id)),d}))}revokeAccessToken(){var l;return d(this,void 0,void 0,(function*(){yield this._validateMethod();const d=yield null===(l=this._client)||void 0===l?void 0:l.revokeAccessToken();return this._onEndUserSession&&(yield this._onEndUserSession(d)),d}))}getOIDCServiceEndpoints(){var l;return d(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(l=this._client)||void 0===l?void 0:l.getOIDCServiceEndpoints()}))}getHttpClient(){if(this._client){if(this._storage!==l.Storage.WebWorker)return this._client.getHttpClient();throw new o("SPA-AUTH_CLIENT-GHC-IV01","Http client cannot be returned.","The http client cannot be returned when the storage type is set to webWorker.")}throw new o("SPA-AUTH_CLIENT-GHC-NF02","The SDK is not initialized.","The SDK has not been initialized yet. Initialize the SDK using the initialize method before calling this method.")}getDecodedIDToken(){var l;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.getDecodedIDToken()}))}getIDToken(){var l;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.getIDToken()}))}getAccessToken(){return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),this._storage&&[(l.Storage.WebWorker,l.Storage.BrowserMemory)].includes(this._storage)?Promise.reject(new o("SPA-AUTH_CLIENT-GAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory.")):this._client.getAccessToken()}))}refreshAccessToken(){var l;return d(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.refreshAccessToken()}))}isAuthenticated(){var l;return d(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(l=this._client)||void 0===l?void 0:l.isAuthenticated()}))}on(c,Z,i){var t,e,n,b;return d(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!Z||"function"!=typeof Z)throw new o("SPA-AUTH_CLIENT-ON-IV02","Invalid callback function.","The provided callback function is invalid.");switch(c){case l.Hooks.SignIn:this._onSignInCallback=Z;break;case l.Hooks.SignOut:this._onSignOutCallback=Z,F.isSignOutSuccessful()&&this._onSignOutCallback();break;case l.Hooks.RevokeAccessToken:this._onEndUserSession=Z;break;case l.Hooks.Initialize:this._onInitialize=Z;break;case l.Hooks.HttpRequestError:null===(t=this._client)||void 0===t||t.setHttpRequestErrorCallback(Z);break;case l.Hooks.HttpRequestFinish:null===(e=this._client)||void 0===e||e.setHttpRequestFinishCallback(Z);break;case l.Hooks.HttpRequestStart:null===(n=this._client)||void 0===n||n.setHttpRequestStartCallback(Z);break;case l.Hooks.HttpRequestSuccess:null===(b=this._client)||void 0===b||b.setHttpRequestSuccessCallback(Z);break;case l.Hooks.CustomGrant:i&&this._onCustomGrant.set(i,Z);break;case l.Hooks.SignOutFailed:{this._onSignOutFailedCallback=Z;const l=F.didSignOutFail();l&&this._onSignOutFailedCallback(l);break}default:throw new o("SPA-AUTH_CLIENT-ON-IV01","Invalid hook.","The provided hook is invalid.")}}))}enableHttpHandler(){var l;return d(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(l=this._client)||void 0===l?void 0:l.enableHttpHandler()}))}disableHttpHandler(){var l;return d(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(l=this._client)||void 0===l?void 0:l.disableHttpHandler()}))}updateConfig(c){return d(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage===l.Storage.WebWorker){const l=this._client;yield l.updateConfig(c)}else{const l=this._client;yield l.updateConfig(c)}}))}}AZ._instances=new Map;class _Z extends Worker{constructor(){super(...arguments),this.onmessage=()=>null}}return l.AUTHORIZATION_CODE=t,l.AsgardeoAuthClient=V,l.AsgardeoAuthException=o,l.AsgardeoSPAClient=AZ,l.AuthenticationUtils=G,l.CLIENT_ID_TAG="{{clientID}}",l.CLIENT_SECRET_TAG="{{clientSecret}}",l.OIDC_SCOPE="openid",l.PKCE_CODE_VERIFIER="pkce_code_verifier",l.PKCE_SEPARATOR="#",l.REFRESH_TOKEN_TIMER=Z,l.SCOPE_TAG="{{scope}}",l.SESSION_STATE=e,l.SIGN_OUT_SUCCESS_PARAM=b,l.SIGN_OUT_URL=n,l.SPAUtils=F,l.STATE=m,l.SUPPORTED_SIGNATURE_ALGORITHMS=i,l.TOKEN_TAG="{{token}}",l.USERNAME_TAG="{{username}}",l.WebWorkerClass=_Z,Object.defineProperty(l,"__esModule",{value:!0}),l}({});